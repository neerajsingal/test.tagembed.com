{"version":3,"file":"static/js/3915.78ab9e9e.chunk.js","mappings":"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","sources":["app/Layout/Main/Content/index.js"],"sourcesContent":["import React, { useState, useEffect } from 'react'\nimport SubHeaderCrumbs from '../CommonComponents/SubHeader'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { Button, Card, Col, Container, Dropdown, Form, OverlayTrigger, Row, Tooltip } from 'react-bootstrap'\nimport { FontAwesomeIcon } from '../../../../Assets/AssetsHelper'\nimport EmptyWithIcon from '../CommonComponents/Empty/EmptyWithIcon'\nimport { useNavigate } from 'react-router-dom'\nimport AddContentModal from '../CommonComponents/ContentSwitcher/AddContentModal'\nimport { GALLERY_WALL_UPDATE } from '../../../../actions/sceneActions'\nimport { Loader } from '../CommonComponents/Loader'\nimport Swal from 'sweetalert2'\nimport { shopifyApp, switchWarning } from '../../../../utils'\nimport CustomToolTip from '../CommonComponents/CustomToolTip'\nimport Author from '../CommonComponents/Author/Author'\nimport queryString from 'query-string'\nimport NetworkIconsSection from '../CommonComponents/NetworkIconsSection'\nimport { FILTER_LOADER_UPDATE } from '../../../../reducer/keys'\n\nfunction Content() {\n    const [toggleG, setToggleG] = useState(false)\n    const { wallsLoader } = useSelector(state => state?.dashboardData)\n    const [editContent, setEditContent] = useState([]);\n    const [spinner, setSpinner] = useState(false)\n    const [apiError, setApiError] = useState(false)\n    const allWalls = useSelector(state => state.dashboardData?.dashboarddata?.allWalls)\n    const navigate = useNavigate()\n    const dispatch = useDispatch()\n\n    const addGallery = () => {\n        setToggleG(true)\n    }\n\n    const handleEdit = (item) => {\n        setToggleG(true)\n        setEditContent(item)\n    }\n\n    const callback = (msg) => {\n        if (msg) {\n            setApiError(msg)\n            setSpinner(false)\n        }\n        else {\n            setToggleG(false);\n            setEditContent([])\n            setSpinner(false)\n        }\n    };\n\n    const deleteContent = (item) => {\n        Swal.fire({\n            title: \"Are You Sure?\",\n            text: 'You are about to delete a Gallery that is used in Publish. Deleting the gallery would also delete the corresponding Publish sections.',\n            icon: \"warning\",\n            showCancelButton: true,\n            cancelButtonText: \"Cancel\",\n            confirmButtonText: \"Yes, Delete it\",\n        }).then((result) => {\n            if (result.value) {\n                dispatch(GALLERY_WALL_UPDATE({ name: item.name, status: item.status, autoUpdate: item.autoUpdate || 0, id: item.id, deleted: 0, action: 3 }, null, callback))\n            }\n            else if (result.dismiss === \"cancel\") { }\n        });\n    }\n\n    const isGalleryNameExist = (galleryName) => allWalls?.some(wall => wall?.name?.toLowerCase() === galleryName?.toLowerCase());\n\n    const onAddGallery = (name, autoUpdate, status) => {\n        const galleryName = name?.trim();\n\n        if (isGalleryNameExist(galleryName)) {\n            setApiError(\"Gallery name already exists.\");\n            return;\n        }\n\n        if (galleryName) {\n            setSpinner(true);\n            dispatch(GALLERY_WALL_UPDATE({ name: galleryName, status, carouselPost: 0, autoUpdate: autoUpdate || 0, deleted: 0, id: '', action: 1 }, navigate, callback));\n        }\n    };\n\n    const onUpdate = (id, galleryName, status, autoupdate, carouselPost) => {\n        if (galleryName && galleryName.length > 0) {\n            setSpinner(true)\n            dispatch(GALLERY_WALL_UPDATE({ name: galleryName?.trim(), carouselPost: carouselPost || 0, status: status, id: id, autoUpdate: autoupdate || 0, deleted: 0, action: 2 }, null, callback))\n        }\n    }\n\n    const changeToggles = (data) => {\n        const [item, type, val] = data\n        dispatch(GALLERY_WALL_UPDATE({ name: item.name, carouselPost: item.carouselPost, status: type == 'status' ? val : item.status, autoUpdate: type == 'auto' ? val : item.autoUpdate || 0, id: item.id, deleted: 0, action: 2 }, null, null, true))\n    }\n\n    const openGallery = (id, feed) => {\n        localStorage.setItem('wallId', id)\n        if (feed) {\n            dispatch({ type: FILTER_LOADER_UPDATE, payload: true });\n            setTimeout(() => {\n                navigate(`/content/moderation/${id}`)\n            }, 100);\n        } else navigate(`/content/addfeed/${id}`)\n    }\n\n    useEffect(() => {\n        const result = queryString.parse(window.location.search);\n        if (result && result.addGallery) setToggleG(true)\n    }, [])\n\n    return <>\n        <SubHeaderCrumbs\n            crumbs={[\n                { name: \"Content\", link: \"/content\", icon: \"image\" },\n                { name: \"Home\", link: \"/home\" },\n                { name: \"Content\", link: \"/content\" }\n            ]}\n            RightComponent={\n                <Button variant=\"primary\" aria-label='Add Channel' onClick={addGallery}>\n                    <FontAwesomeIcon type={'solid'} icon={\"plus\"} /> Add Gallery\n                </Button>\n            }\n            crumbIcon=\"image\"\n        />\n\n\n        <Container style={{ maxWidth: '100%' }}>\n            <div className='w-100 sync_products' style={!shopifyApp() ? { minHeight: 'calc(110vh - 142px)', paddingTop: '70px' } : null}>\n                {wallsLoader ? <Loader />\n                    : allWalls?.length ?\n                        <Row className='mx-0'>\n                            {shopifyApp() ? <Col xl={12}>\n                                <div className=\"d-flex align-items-center flex-wrap justify-content-end\">\n                                <Button variant=\"primary\" aria-label='Add Channel' onClick={addGallery}>\n                                    <FontAwesomeIcon type={'solid'} icon={\"plus\"} /> Add Gallery\n                                </Button>\n                            </div> \n                            </Col>: null}\n                            {allWalls.map((item, index) => {\n                                return (\n                                    <Col xl={3} lg={4} md={6} sm={6} key={index} className=\"gutter-b\">\n                                        <Card id={`${item.icon}_btn_`} className='publish-card h-100 cursor-pointer' onClick={(e) => !e.target.closest('.dropdown') ? openGallery(item?.id, item?.totalFeed) : {}}>\n                                            <div className=\"position-absolute top-0 end-0 p-2 mt-2 me-0\" >\n                                                <Dropdown>\n                                                    <OverlayTrigger placement=\"top\" overlay={<Tooltip>Options</Tooltip>}>\n                                                        <Dropdown.Toggle variant='secondary' aria-label='more' className=\"arrow_disabled dropdown-toggle border-0 p-0\">\n                                                            <FontAwesomeIcon icon={'ellipsis-vertical'} size={20} />\n                                                        </Dropdown.Toggle>\n                                                    </OverlayTrigger>\n                                                    <Dropdown.Menu>\n                                                        <Dropdown.Item onClick={() => handleEdit(item)} className={'fs-8'}>\n                                                            <span className='me-2'><FontAwesomeIcon type={'solid'} icon={'edit'} /></span>\n                                                            Edit\n                                                        </Dropdown.Item>\n                                                        <Dropdown.Item onClick={() => deleteContent(item)} className={'fs-8'}>\n                                                            <span className='me-2'><FontAwesomeIcon type={'solid'} icon={'trash-can'} /></span>\n                                                            Delete\n                                                        </Dropdown.Item>\n                                                        <Dropdown.Item onClick={() => navigate('/publish')} className={'fs-8'}>\n                                                            <span className='me-2 fs-8'><FontAwesomeIcon type={'solid'} icon={'paper-plane'} /></span>\n                                                            Publish\n                                                        </Dropdown.Item>\n                                                        <div className=\"dropdown-item d-flex justify-content-between align-items-center\" onClick={(e) => e.stopPropagation()}>\n                                                            <Form.Label htmlFor='cont_a_u' className=\"mb-0 fs-8\">Auto update</Form.Label>\n                                                            <Form.Check type=\"switch\" id=\"cont_a_u\" checked={item?.autoUpdate}\n                                                                onChange={() => item?.autoUpdate ? switchWarning('Disabling auto-update will prevent new posts from being fetched, limiting the content while existing posts remain accessible.', changeToggles, [item, 'auto', Number(!item?.autoUpdate)]) : changeToggles([item, 'auto', Number(!item?.autoUpdate)])}\n                                                            />\n                                                        </div>\n                                                        <div className=\"dropdown-item d-flex justify-content-between align-items-center\" onClick={(e) => e.stopPropagation()}>\n                                                            <Form.Label htmlFor='cont_s' className=\"mb-0 fs-8\">Status</Form.Label>\n                                                            <Form.Check type=\"switch\" id=\"cont_s\" checked={item?.status}\n                                                                onChange={() => item?.status ? switchWarning('Disabling this status will hide all collected posts from this feed, affecting visibility and content access.', changeToggles, [item, 'status', Number(!item?.status)]) : changeToggles([item, 'status', Number(!item?.status)])}\n                                                            />\n                                                        </div>\n                                                    </Dropdown.Menu>\n                                                </Dropdown>\n                                            </div>\n                                            <Card.Body className='flex-column f-center px-3 py-0'>\n                                                <div className=\"d-flex w-100 flex-wrap\">\n                                                    <div className='d-flex align-items-center'>\n                                                        <Author imageSize={40} symbolClass={'symbol-label'}\n                                                            className={'symbol symbol-54 fs-2 rounded-2 flex-shrink-0 me-2 overflow-hidden'}\n                                                            name={item.name} profileUrl={item.thumbnail} networkId={28} />\n                                                        <div className=\"publish-detail d-flex flex-column ms-2\">\n                                                            <strong className=\"h4 mb-0 pe-3\">{item?.name}</strong>\n                                                            <span className='fs-9'>{item?.totalPost} Posts | {item?.totalFeed || 0} Feeds</span>\n                                                        </div>\n                                                    </div>\n                                                    <div className={`content-foot mt-5 align-items-center d-flex ${item?.networkIds?.length ? 'justify-content-between' : 'justify-content-end'} w-100`}>\n                                                        {item?.networkIds?.length ? <NetworkIconsSection networkList={item?.networkIds} /> : null}\n                                                        <div>\n                                                            <CustomToolTip cssClName=\"light\" overlayText=\"Edit\">\n                                                                <span onClick={(e) => openGallery(item?.id, item?.totalFeed)} className='me-2 btn btn-sm bg-secondary border'>\n                                                                    <FontAwesomeIcon type={'solid'} iconClass={'me-0'} icon={'edit'} />\n                                                                </span>\n                                                            </CustomToolTip>\n                                                            <CustomToolTip cssClName=\"light\" overlayText=\"Publish\">\n                                                                <span onClick={(e) => { e.stopPropagation(); navigate('/publish'); }} className='me-2 btn btn-sm bg-secondary border'>\n                                                                    <FontAwesomeIcon type={'solid'} iconClass={'me-0'} icon={'paper-plane'} />\n                                                                </span>\n                                                            </CustomToolTip>\n                                                        </div>\n                                                    </div>\n                                                </div>\n                                            </Card.Body>\n                                        </Card>\n                                    </Col>\n                                )\n                            })}\n                        </Row>\n                        :\n                        <div className=\"f-center\" style={{ minHeight: 'calc(100vh - 240px)' }}>\n                            <EmptyWithIcon\n                                title=\"Uh-oh! Nothing to see here.\"\n                                desc={'You can start adding new channels here.'}\n                                icon={'media'}\n                                button={{ text: 'Add Gallery', action: addGallery }}\n                                isFullScreen={false}\n                            />\n                        </div>\n                }\n            </div>\n        </Container>\n\n        {toggleG &&\n            // <AddGallery \n            //     show={toggleG} \n            //     handleClose={() => {\n            //         setToggleG(false)\n            //         setIsEdit(false)\n            //     }} \n            //     title={\"Channel To Publish\"} \n            //     navigate={navigate} \n            //     isEdit={isEdit} \n            //     editData={editData} \n            //     updateData={updateData} \n            // />\n            <AddContentModal show={toggleG} apiError={apiError} setApiError={setApiError} title=\"Gallery\" onCreate={onAddGallery} onUpdate={onUpdate} editContent={editContent} handleClose={() => { setEditContent([]); setToggleG(false); setApiError('') }} deleteContent={deleteContent} spinner={spinner} />\n        }\n    </>\n}\nexport default Content"],"names":["toggleG","setToggleG","useState","wallsLoader","useSelector","state","dashboardData","editContent","setEditContent","spinner","setSpinner","apiError","setApiError","allWalls","_state$dashboardData","_state$dashboardData$","dashboarddata","navigate","useNavigate","dispatch","useDispatch","addGallery","callback","msg","deleteContent","item","Swal","title","text","icon","showCancelButton","cancelButtonText","confirmButtonText","then","result","value","GALLERY_WALL_UPDATE","name","status","autoUpdate","id","deleted","action","dismiss","changeToggles","data","type","val","carouselPost","openGallery","feed","localStorage","setItem","FILTER_LOADER_UPDATE","payload","setTimeout","useEffect","queryString","parse","window","location","search","_jsxs","_Fragment","children","_jsx","SubHeaderCrumbs","crumbs","link","RightComponent","Button","variant","onClick","FontAwesomeIcon","crumbIcon","Container","style","maxWidth","className","shopifyApp","minHeight","paddingTop","Loader","length","Row","Col","xl","map","index","_item$networkIds","_item$networkIds2","lg","md","sm","Card","e","target","closest","totalFeed","Dropdown","OverlayTrigger","placement","overlay","Tooltip","Toggle","size","Menu","Item","handleEdit","stopPropagation","Form","Label","htmlFor","Check","checked","onChange","switchWarning","Number","Body","Author","imageSize","symbolClass","profileUrl","thumbnail","networkId","totalPost","networkIds","NetworkIconsSection","networkList","CustomToolTip","cssClName","overlayText","iconClass","EmptyWithIcon","desc","button","isFullScreen","AddContentModal","show","onCreate","onAddGallery","galleryName","trim","some","wall","_wall$name","toLowerCase","isGalleryNameExist","onUpdate","autoupdate","handleClose"],"sourceRoot":""}