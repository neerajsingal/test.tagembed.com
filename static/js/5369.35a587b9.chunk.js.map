{"version":3,"file":"static/js/5369.35a587b9.chunk.js","mappings":"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","sources":["app/Authentication/Init/components/ProductCard.js","app/Authentication/Init/index.js","app/Authentication/index.js"],"sourcesContent":["import React, { useRef } from \"react\";\nimport { MediaBaseUrl } from \"../../../../actions/api\";\n\nconst ProductCard = ({ id, title, productImg, loading, tags, content, competetors, buttonText, selectProduct }) => {\n    const cardRef = useRef();\n\n    const addHoverClass = (mouseLeave) => {\n        const element = cardRef.current;\n        if (element) {\n            if (mouseLeave) element.classList.remove('hover');\n            else element.classList.add('hover');\n        }\n    }\n\n    return <div className=\"col-lg-4 col-md-6 mb-lg-0 mb-3 text-center text-md-start\">\n        <div className=\"card overflow-hidden onboarding-card h-100\" ref={cardRef} onClick={() => selectProduct(id)}>\n            <div className=\"d-flex flex-column justify-content-between h-100 p-3\">\n                <div className=\"\">\n                    <div className=\"onboarding-box\" style={{ padding: \"18px 10px 15px 10px\", borderRadius: \"8px\", backgroundColor: \"#F4F4F6\" }}>\n                        <ImageField isPrefix={true} className=\"img-fluid\" style={{ boxShadow: 'var(--bs-box-shadow-sm)', borderRadius: '4px', minHeight: '160px' }} src={productImg} alt={title} />\n                        <div className=\"d-flex flex-wrap mt-5 justify-content-center justify-content-md-start\">\n                            {tags.map((item, index) => <span className=\"me-1 mb-1 px-2 py-1 rounded d-inline btn btn-dark fs-9\" key={index}>{item}</span>)}\n                        </div>\n                    </div>\n                    <div className=\"px-0 pt-5\">\n                        <div className=\"\" style={{ fontSize: \"13px\" }}>\n                            <h4 className=\"mt-0 mb-2\" style={{ fontSize: \"15px\" }}>{title}</h4>\n                            <p className=\"text-muted mb-0\">{content}</p>\n                        </div>\n                    </div>\n                </div>\n                {/* <div className=\"\">\n                    <div className=\"mt-2 px-5 pb-5\">\n                        <button onMouseEnter={() => addHoverClass(false)} onMouseLeave={() => addHoverClass(true)} className=\"btn btn-dark w-100 d-flex justify-content-center\" disabled={loading} style={{ fontSize: \"16px\", fontWeight: '500' }} onClick={!loading ? () => selectProduct(id) : null}><div className=\"d-flex align-items-center\">{buttonText} <svg className=\"ml-1\" xmlns=\"http://www.w3.org/2000/svg\" width=\"18\" height=\"12\" viewBox=\"0 0 18 15\" fill=\"none\">\n                            <path d=\"M16.7501 8.47983L11.0496 14.2176L10.4162 14.851L9.14944 13.5842L9.78283 12.9508L13.9557 8.74063H1.66055H0.766357V6.95224H1.66055H13.9557L9.78283 2.77933L9.14944 2.14594L10.4162 0.879167L11.0496 1.51256L16.7501 7.21305L17.3835 7.84644L16.7501 8.47983Z\" fill=\"white\" />\n                        </svg></div></button>\n                    </div>\n                </div> */}\n            </div>\n        </div>\n    </div>\n}\n\nexport default ProductCard;\n\nconst ImageField = ({ alt, className, src, isPrefix = false, ...rest }) => (\n    <img {...rest} src={`${isPrefix ? '' : `${MediaBaseUrl}media/`}${src}`} alt={alt} className={className} />\n);","import React, { useEffect, useState } from 'react'\nimport ProductCard from './components/ProductCard'\nimport { connect, useDispatch } from 'react-redux';\nimport { useNavigate } from 'react-router-dom';\nimport { getUserInfo_afterChanges, productSignUp, SkipOnBoarding } from '../../../actions/loginActions';\nimport { IS_TAGEMBED, LOGOBRAND, MediaBaseUrl } from '../../../actions/api';\nimport { Loader } from '../../Layout/Main/CommonComponents/Loader';\n\n\nconst products = [\n    {\n        \"id\": 6,\n        \"title\": \"Social Feeds on Websites\",\n        \"productImg\": `${MediaBaseUrl}media/products/social-init.png`,\n        \"tags\": [\n            \"Social Media Managers\",\n            \"Developer\",\n            \"Digital Marketing Managers\"\n        ],\n        \"content\": \"Showcase real-time social content to build trust and engagement.\",\n        // \"competetors\": \"EmbedSocial, Curator.io, Juicer etc\",\n        // \"buttonText\": \"Continue With Tagbox\"\n    },\n    {\n        \"id\": 2,\n        \"title\": \"Shoppable Feeds on Websites\",\n        \"productImg\": `${MediaBaseUrl}media/products/shoppable-init.png?`,\n        \"tags\": [\n            \"Ecommerce Marketer\",\n            \"Performance\",\n            \"Performance Marketer\"\n        ],\n        \"content\": \"Turn customer content into conversions with interactive UGC galleries.\",\n        // \"competetors\": \"Walls.io, Everwall\",\n        // \"buttonText\": \"Continue With Social walls\"\n    },\n    {\n        \"id\": 4,\n        \"title\": \"Display Social Feeds on Screens\",\n        \"productImg\": `${MediaBaseUrl}media/products/display-init.png`,\n        \"tags\": [\n            \"Events Marketers\",\n            \"Event Planners\",\n            \"Digital Marketing Managers\"\n        ],\n        \"content\": \"Engage & convert attendees with social media displays at events, signage etc.\",\n        // \"competetors\": \"Walls.io, Everwall\",\n        // \"buttonText\": \"Continue With Social walls\"\n    }\n];\n\nexport const NavBar = () => {\n    return <div className={`page-header navbar px-5 py-3`}>\n        <div className=\"page-header-inner \">\n            <div className=\"page-logo\">\n                <ImageField isPrefix={true} className={`img-fluid`} src={LOGOBRAND} />\n            </div>\n        </div>\n    </div>\n}\nconst InitPage = ({ signUpData, selectProduct }) => {\n\n    const [state, setState] = useState({\n        data: [],\n        showPop: false,\n        loading: false\n    })\n    const dispatch = useDispatch();\n    const navigate = useNavigate();\n\n    useEffect(() => {\n        // ADD_SCRIPT(\"https://assets.calendly.com/assets/external/widget.js\");\n        if (!signUpData) {\n            localStorage.clear();\n            window.location.href = \"/\";\n        } else {\n            if (IS_TAGEMBED) {\n                const route = localStorage.getItem('sign-up-route');\n                setTimeout(() => {\n                    navigate(route);\n                    localStorage.removeItem('sign-up-route');\n                }, 3000);\n            } else {\n                setState(prev => ({ ...prev, data: products }));\n                getProduct();\n            }\n        }\n    }, [])\n\n    // select product to skip user from selecting product in case of coming from widget and display directly.\n    const getProduct = () => {\n        const productId = window.location.pathname.includes(\"widget\") ? 6 : null;\n        if (productId) onSubmit(productId);\n    }\n\n    const onSubmit = (id) => {\n        setState(prev => ({ ...prev, loading: true }));\n        localStorage.setItem(\"isProductSelected\", true);\n        selectProduct({ ...signUpData, activeProduct: String(id == 4 ? 4 : 6) }, navigate, () => {\n            if (id == 2) {\n                localStorage.setItem(\"isEcommerce\", true);\n                SkipOnBoarding({ \"stepstype\": \"onboardingskip\" }).then(res => {\n                    dispatch(getUserInfo_afterChanges())\n                }).catch(ex => { })\n            }\n        })\n    }\n\n    return (\n        IS_TAGEMBED ? <div className='f-center' style={{ minHeight: 'calc(100vh - 100px)' }}><Loader /></div> : <>\n            <NavBar />\n            <div className=\"container login-container\" id=\"controllerContent\">\n                <div className=\"controller\" id=\"init\">\n                    <div className=\"action\" id=\"initindex\">\n                        <div className=\"mainLogin noLoader\" id=\"WallIndexForm\">\n                            <div className=\"sourceSection init_sec\">\n                                <div className=\"loginBlock loginBlock_m_p loginBlock_ch freeSocialWall picASource\">\n                                    <div className=\"loginInnSec\" style={{ display: 'flex', flexDirection: 'column', alignItems: 'center', marginTop: '20px' }}>\n                                        <div className=\"loginHead text-center\">\n                                            <h2 id=\"initheader\">Choose the Experience That Matches Your Brand Goals</h2>\n                                            <p className='text-muted'>Tell us how you plan to use {IS_TAGEMBED ? \"Tagembed\" : \"Tagbox\"}. This helps us tailor your setup to your exact needs.</p>\n                                        </div>\n                                        <div className=\"onboarding-form pt-5\">\n                                            <div id=\"onboardingList\" className=\"container\" style={{ maxWidth: '960px' }}>\n                                                <ul id=\"onbordingInput\" className=\"onboardings row px-0\">\n                                                    {state.data.map((item, index) => <ProductCard {...item} selectProduct={onSubmit} loading={state.loading} key={index} />)}\n                                                </ul>\n                                                {/* <div className=\"start-button-box\">\n                                                <p className=\"calendlyAclick d-flex align-items-center justify-content-center\"><span className=\"me-2\">Not Sure? </span> <span className=\"btn btn-link\" onClick={() => setState(prev => ({ ...prev, showPop: true }))}>Discuss With Us</span>\n                                                </p>\n                                            </div> */}\n                                            </div>\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </>)\n}\nconst mapStateToProps = (state) => {\n    return {\n        signUpData: state.authorized?.userData?.user_data\n    }\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        selectProduct: (data, history, callback) => dispatch(productSignUp(data, history, callback)),\n    }\n}\nexport default connect(mapStateToProps, mapDispatchToProps)(InitPage);\n\nconst ImageField = ({ alt, className, src, ...rest }) => (\n    <img {...rest} src={src} alt={alt} className={className} />\n);","import React from \"react\";\nimport { Col, Row, Table, Image, Card, Navbar } from \"react-bootstrap\";\nimport { Link } from \"react-router-dom\";\nimport withRouter from \"../routes/WithRouter\";\nimport { baseUrl, FontAwesomeIcon } from \"../../Assets/AssetsHelper\";\nimport { generateRandomArray } from \"../../utils\";\nimport \"./auth.scss\"\nimport { IS_TAGEMBED, LOGO } from \"../../actions/api\";\nimport { jsonData } from \"./Authentication\";\nimport { NavBar } from \"./Init\";\nconst Authentication = (props) => {\n    const { children } = props;\n    const onlyFormUrl = ['forgotpassword', 'resetpassword', 'accounts/otherinfo', 'collaborator/request', 'accounts/temp-pwd']\n    const onlyForm = onlyFormUrl.some(path => props.location.pathname.includes(path))\n    const isRedirect = [\"/\", \"/accounts/login\"].some(path => props.location.pathname.includes(path))\n    return <div className={`min-h-100 ${!IS_TAGEMBED ? 'tb-theme': ''}`}>\n        {props.location.pathname.includes('accounts/otherinfo') && <NavBar/>}\n        <div className={`auth_bg bg-white${onlyForm ? ' auth_full_screen' : ''}${props.location.pathname.includes('accounts/otherinfo') ? ' other-info-main' : ''}`}>\n            <Row className=\"gx-0 w-100 mx-0\" style={{ minHeight: 'calc(100vh - 60px)' }}>\n                <Col xxl={5} lg={6} className={`d-none d-lg-block bg-gradient-${IS_TAGEMBED ? '1' : '2'} ${onlyForm ? 'd-lg-none' : ''}`}>\n                    <div className='d-flex flex-column flex-grow-1 min-h-100'>\n                        <div className=\"px-xl-10 px-5\">\n                            <div className='d-flex flex-column hauto-smheight' style={{ height: '19vh' }}>\n                                <div className=\"d-flex justify-content-center p-5\">\n                                    <Link to={isRedirect && !onlyForm ? IS_TAGEMBED ? 'https://tagembed.com/' :'https://taggbox.com/' : '/'} className=\"d-block text-center\" title={IS_TAGEMBED ? 'Tagembed' : 'Taggbox'}>\n                                        <Image src={LOGO} width=\"170\" height=\"34\" alt={IS_TAGEMBED ? 'Tagembed' : 'Taggbox'} title={IS_TAGEMBED ? 'Tagembed' : 'Taggbox'} />\n                                    </Link>\n                                </div>\n                                <p className=\"text-muted text-uppercase mb-3 fs-8 fw-medium text-center\">{jsonData.platformTagline}</p>\n                            </div>\n                            <div className=\"hauto-smheight\" style={{ height: '35vh', minHeight: 280 }}>\n                                <Card className=\"rounded-3 mx-auto\" style={{ boxShadow: '3px 6px 20px 0px #6B6B6B17', maxWidth: 520 }}>\n                                    <Card.Body className=\"p-1\">\n                                        <div className=\"d-flex w-100\">\n                                            <div className=\"d-flex w-100 flex-shrink-0\" style={{ maxWidth: 220 }}>\n                                                <Image className=\"object-center-cover h-100 w-100 rounded-2\" style={{maxHeight:'250px', objectPosition:'top'}} height={250} width={220} src={baseUrl(jsonData.userImage)} alt={jsonData.userImage} fluid />\n                                            </div>\n                                            <div className=\"d-flex flex-column p-4 position-relative\">\n                                                <div className=\"position-absolute start-0 top-0 px-3 pt-2\">\n                                                    <FontAwesomeIcon type={'solid'} icon={'quote-left'} iconClass={'display-1 fw-bold opacity-25'} />\n                                                </div>\n                                                <div className=\"position-relative my-3\">\n                                                    <p className=\"mb-5\">{jsonData.testimonial.desc}</p>\n                                                    <p className=\"fw-bolder fs-8 mb-0\">{jsonData.testimonial.author}</p>\n                                                    <p className=\"fs-8 mb-0 text-muted\">{jsonData.testimonial.position}</p>\n                                                </div>\n                                            </div>\n                                        </div>\n                                    </Card.Body>\n                                </Card>\n                            </div>\n                        </div>\n                        <div className=\"trusted_by w-100 hauto-smheight\" style={{ height: '24vh' }}>\n                            <Table bordered>\n                                <tbody>\n                                    <tr>\n                                        {generateRandomArray(3).map((user, index) => (<td key={index} className=\"bg-transparent\" style={{ borderRight: 0 }}>\n                                            <div className='d-flex align-items-center justify-content-center'>\n                                                <Image height={15} width={120} src={baseUrl(jsonData.companies.logs[index])} alt={'Clients'} fluid />\n                                            </div>\n                                        </td>))}\n                                    </tr>\n                                    <tr>\n                                        {generateRandomArray(3).map((user, index) => (<td key={index} className=\"bg-transparent\" style={{ borderRight: 0 }}>\n                                            <div className='d-flex align-items-center justify-content-center'>\n                                                <Image height={15} width={120} src={baseUrl(jsonData.companies.logs[index + 3])} alt={'Clients'} fluid />\n                                            </div>\n                                        </td>))}\n                                    </tr>\n                                </tbody>\n                            </Table>\n                        </div>\n                        <div className=\"f-center\">\n                            <Image height={128} width={100} src={baseUrl(jsonData.badgeImage)} alt={'G2 Badge'} fluid />\n                            <div className=\"ms-xl-5 ms-3 flex-column d-flex\">\n                                <div className={`d-flex align-items-center justify-content-start mb-2`}  >\n                                    {generateRandomArray(5).map((count, index) => (<div key={index} className='ps-1 fs-4' style={{ color: '#FF492C' }}>\n                                        <FontAwesomeIcon type=\"solid\" icon={'star'} />\n                                    </div>))}\n                                    <span className=\"fw-bolder fs-5 ms-3\">4.9/5</span>\n                                </div>\n                                <p className=\"text-muted mb-0\">{jsonData.reviewSummary}</p>\n                            </div>\n                        </div>\n                    </div>\n                </Col>\n                <Col xxl={onlyForm ? 12 : 7} lg={onlyForm ? 12 : 6} className=\"d-flex align-items-center justify-content-center py-10 py-lg-0\">\n                    <div className=\"flex-column f-center flex-grow-1 p-5 p-lg-10 auth_form\">\n                        <div className=\"f-center flex-column flex-shrink-0 auth_form_area\">\n                            {children}\n                        </div>\n                    </div>\n                </Col>\n            </Row>\n        </div>\n    </div>\n}\nexport default withRouter(Authentication)\n"],"names":["_ref","id","title","productImg","loading","tags","content","competetors","buttonText","selectProduct","cardRef","useRef","_jsx","className","children","ref","onClick","_jsxs","style","padding","borderRadius","backgroundColor","ImageField","isPrefix","boxShadow","minHeight","src","alt","map","item","index","fontSize","_ref2","rest","MediaBaseUrl","products","NavBar","LOGOBRAND","connect","state","_state$authorized","_state$authorized$use","signUpData","authorized","userData","user_data","dispatch","data","history","callback","productSignUp","setState","useState","showPop","useDispatch","navigate","useNavigate","useEffect","IS_TAGEMBED","route","localStorage","getItem","setTimeout","removeItem","prev","getProduct","clear","window","location","href","productId","pathname","includes","onSubmit","setItem","activeProduct","String","SkipOnBoarding","then","res","getUserInfo_afterChanges","catch","ex","Loader","_Fragment","display","flexDirection","alignItems","marginTop","maxWidth","_createElement","ProductCard","key","withRouter","props","onlyForm","some","path","isRedirect","Row","Col","xxl","lg","height","Link","to","Image","LOGO","width","jsonData","platformTagline","Card","Body","maxHeight","objectPosition","baseUrl","userImage","fluid","FontAwesomeIcon","type","icon","iconClass","testimonial","desc","author","position","Table","bordered","generateRandomArray","user","borderRight","companies","logs","badgeImage","count","color","reviewSummary"],"sourceRoot":""}