{"version":3,"file":"static/js/9746.6c699ce6.chunk.js","mappings":"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","sources":["app/Layout/Main/Moderation/ContentModal/Elements/TagProducts.js","app/Layout/Main/Moderation/ContentModal/Elements/ContentModalAside.js"],"sourcesContent":["import React, { Component } from 'react'\nimport { Form, Button, Col, Row, InputGroup, Dropdown, Badge, Image } from 'react-bootstrap';\nimport { baseUrl, FontAwesomeIcon } from '../../../../../../Assets/AssetsHelper';\nimport ImageType from '../../../CommonComponents/MediaType/ImageType';\nimport { Link } from 'react-router-dom'\nimport { connect } from 'react-redux';\nimport { ACTION_PRODUCT_LIST_FORTAG, PRODUCT_TAGS_AUTOSEARCH, fetchProductList } from '../../../../../../actions/productAction';\nimport { REMOVE_TAGGED_PRODUCT_ACTION, TAG_PRODUCT_ACTION } from '../../../../../../actions/moderationActions';\nimport { SEARCH_BY_PRODUCTS } from '../../../../../../reducer/keys';\nimport { getUserInfo_afterChanges } from '../../../../../../actions/loginActions';\nimport { TOAST_ERROR, check_hotspotLocation, debounce } from '../../../../../../utils';\nimport { checkPermission } from '../../../../../../actions/collaboratorActions';\nimport { Loader } from '../../../CommonComponents/Loader';\nimport { color } from '@uiw/react-codemirror';\nimport ContactModal from '../../../PricePlan/Elements/ContactModal';\n\nclass TagProducts extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = { postproduct: [], tagedprod: [], showProd: false, showtags: false, searchTag: '', loadingTag: false, productTags: [], selectedTag: [], productId: 0, errorMsg: '', searchText: '', currentPage: 1, loading: false, scrolledToBottom: false, sentReq: false, visenzeId: null, visenzeProduct: null, firstTime: false, productList: [], showContactUs: false, type: \"\", prodClick: true }\n        this.outsideNewRef = React.createRef();\n        this.outsideNewRef2 = React.createRef();\n        this.listRef = React.createRef();\n        this.tagProductRef = React.createRef();\n        this.debouncedTriggerAction = debounce(this.triggerAction.bind(this), 500);\n        this.debouncedProductTagsSearch = debounce(this.productTagsSearchLogic, 500);\n    }\n\n    componentDidMount() {\n        const { modalData, activeCarousalPostsList } = this.props\n        window.addEventListener('click', this.handleClickOutside);\n        window.addEventListener('click', this.handleClickOutsideTagProduct);\n        window.addEventListener('scroll', this.handleScroll);\n        this.setState({ postproduct: activeCarousalPostsList ? activeCarousalPostsList : modalData.postproduct })\n    }\n\n\n    setLastSearchTag = () => {\n        const { modalData } = this.props;\n        //this.setState({ loading: true })\n        this.setState(prevState => ({ loading: false, productList: [...prevState.productList] }));\n        //this.props.fetchProductList(1, 10, this.state.selectedTag, '', this.responceApi, modalData?.referenceId, modalData?.newMedia)\n    }\n\n    componentWillUnmount() {\n        window.removeEventListener('click', this.handleClickOutside);\n        if (this.searchTimeout) { clearTimeout(this.searchTimeout); }\n        window.removeEventListener('scroll', this.handleScroll);\n        window.addEventListener('click', this.handleClickOutsideTagProduct);\n    }\n\n    componentDidUpdate(prevProps, prevState) {\n\n        const { modalData, activeCarousalPostsList, activeCarousalPost } = this.props\n        const { searchText, postproduct } = this.state\n\n        if (searchText !== prevState.searchText) {\n            this.debouncedTriggerAction();\n            // if (this.searchTimeout) { clearTimeout(this.searchTimeout); }\n            // this.searchTimeout = setTimeout(() => {\n            //     this.triggerAction();\n            // }, 800);\n        }\n\n        if (activeCarousalPost) {\n            if (activeCarousalPostsList?.length != postproduct?.length) this.setState({ postproduct: activeCarousalPostsList })\n        } else {\n            if (modalData?.postproduct?.length != postproduct?.length) this.setState({ postproduct: modalData.postproduct })\n        }\n    }\n\n    handleClickOutsideTagProduct = (event) => {\n        if (this.tagProductRef && !this.tagProductRef?.current?.contains(event.target)) { this.setState({ showtags: false }); }\n    };\n\n    handleClickOutside = (event) => {\n        if (this.outsideNewRef.current && !this.outsideNewRef.current?.contains(event.target)) this.setState({ showProd: false });\n    };\n\n\n    filterProduct = (e) => {\n        const keyword = e.target.value;\n        this.setState({ searchText: keyword });\n    }\n\n    triggerAction = (firstClick) => {\n        const { searchText, selectedTag, prodClick } = this.state;\n        const { SEARCH_PRODUCTS_TEXT, fetchProductList, modalData } = this.props;\n\n        if (firstClick && prodClick) {\n            this.setState({ loading: true, prodClick: false })\n            fetchProductList(1, 10, selectedTag, '', this.responceApi, modalData?.referenceId, modalData?.newMedia || modalData?.postFile);\n        }\n\n        else if (searchText?.length >= 1) {\n            this.setState({ showProd: true, loading: true, productList: [] });\n            SEARCH_PRODUCTS_TEXT(searchText);\n            fetchProductList(1, 10, selectedTag, searchText, this.responceApi, modalData?.referenceId, modalData?.newMedia || modalData?.postFile);\n        } else if (!searchText) {\n            this.setState({ showProd: true, loading: true, productList: [] });\n            SEARCH_PRODUCTS_TEXT('');\n            fetchProductList(1, 10, selectedTag, '', this.responceApi, modalData?.referenceId, modalData?.newMedia || modalData?.postFile);\n        }\n    }\n\n    responceApi = (data) => {\n        this.setState(prevState => ({ loading: false, productList: data?.length > 0 ? [...data] : [] }));\n    }\n\n    removeTag = (tagToRemove) => {\n        const updatedSelectedTag = this.state.selectedTag.filter(tag => tag !== tagToRemove);\n        this.setState({ selectedTag: updatedSelectedTag, searchTag: '', showtags: false, productTags: [] }, () => this.props.fetchProductList(1, 10, this.state.selectedTag, '', this.responceApi, this.props.modalData?.referenceId, this.props.modalData?.newMedia || this.props.modalData?.postFile))\n    }\n\n    product_tags_search = (e) => {\n        const keyword = e.target.value;\n        this.setState({ loadingTag: true, showtags: keyword?.length > 0, searchTag: keyword }, () => this.debouncedProductTagsSearch(keyword))\n\n    }\n    productTagsSearchLogic = (keyword) => {\n        PRODUCT_TAGS_AUTOSEARCH(keyword)\n            .then((response) => {\n                const { responseCode, responseData } = response.data;\n                if (responseCode === 200) {\n                    this.setState({\n                        productTags: responseData,\n                        showtags: responseData && responseData.length > 0,\n                        loadingTag: false\n                    });\n                }\n            })\n            .catch((error) => {\n                console.error('Error fetching product tags:', error);\n                this.setState({ loadingTag: false });\n            });\n    };\n\n    getData_bySelected_Tag = (tag) => {\n        var tags = [...this.state.selectedTag, tag]\n        this.setState({ selectedTag: [...new Set(tags)], showtags: false, searchTag: '' },\n            () => {\n                this.props.fetchProductList(1, 10, this.state.selectedTag, '', this.responceApi, this.props.modalData?.referenceId, this.props.modalData?.newMedia || this.props.modalData?.postFile);\n            }\n        )\n    }\n\n    handleScroll = () => {\n        const listElement = this.listRef.current;\n        if (listElement) {\n            const rect = listElement.getBoundingClientRect();\n            if (rect.bottom <= window.innerHeight) {\n                this.setState({ scrolledToBottom: true }, () => { this.filterProductOnScrolle(); });\n            }\n        }\n    };\n\n    addProduct = (product, referenceId) => {\n        const { modalData, activeCarousalPost } = this.props;\n        let check_hot = modalData?.postproduct && modalData?.postproduct.length > 0 ? check_hotspotLocation(modalData) : '45%';\n        const location_hotspot = { 'left': `45%`, 'top': `${check_hot}` }\n        const hostpot = `left:45%;top:${check_hot};`\n        const productIds = modalData?.postproduct.length > 0 ? modalData?.postproduct.map(item=>item.product.shopify_product_id.toString()) : []\n        productIds.push(product.shopify_product_id)\n        this.props.TAG_PRODUCT_ACTION(productIds, product, activeCarousalPost ? activeCarousalPost : referenceId, location_hotspot, hostpot, modalData?.feedId, this.callbackMsg)\n        this.setState({ firstTime: true })\n        this.setState({ showProd: false });\n    }\n\n    changePrdId = (id) => {\n        this.setState({ productId: id })\n    }\n\n    callbackMsg = (data) => {\n        const { activeCarousalPost, updateCarousalPost, carousalPostsList } = this.props\n        if (activeCarousalPost) updateCarousalPost(activeCarousalPost, carousalPostsList, data, 1)\n    }\n\n\n    filterProductOnScrolle = () => {\n        const { total_pages } = this.props;\n        if (this.state.currentPage < total_pages && !this.state.sentReq) this.setState({ currentPage: this.state.currentPage + 1, sentReq: true }, () => this.props.ACTION_PRODUCT_LIST_FORTAG(this.state.currentPage, 10, this.state.selectedTag, this.state.searchText, this.completedPageCall, this.props.modalData?.referenceId, this.props.modalData?.newMedia || this.props.modalData?.postFile))\n    }\n\n    completedPageCall = (data) => this.setState(prevState => ({ sentReq: false, productList: [...prevState.productList, ...data] }));\n\n    callbackRemove = (id) => {\n        const { activeCarousalPost, updateCarousalPost, carousalPostsList } = this.props\n        if (activeCarousalPost) updateCarousalPost(activeCarousalPost, carousalPostsList, id, 2)\n    }\n\n    removeTaggProduct = (product_sku, productId, referenceId, id) => {\n        if (checkPermission('contentGallery', 'editGallery', true)){\n            const { modalData } = this.props\n            const productIds = modalData?.postproduct.map(item=>item.product.shopify_product_id.toString())\n            this.props.REMOVE_TAGGED_PRODUCT_ACTION(productIds, product_sku, productId, referenceId, id, this.callbackRemove);\n        }\n    };\n\n\n    clickToShowContact = (status, type) => this.setState({\n        showContactUs: status,\n        type\n    })\n\n\n    render() {\n        const { showProd, selectedTag, productTags, showtags, searchTag, postproduct, loadingTag, errorMsg, searchText, sentReq, loading, productList, showContactUs, type, prodClick } = this.state\n        const { modalData, changeHotspotStatus, enableHotspot, user, activeCarousalPost } = this.props\n\n        const getCarousal = modalData?.imageList?.find((e) => e.referenceId == activeCarousalPost)\n        if (getCarousal) modalData.type = getCarousal.type\n\n        return (<div className=\"\">\n            <div className='p-4 p_tags_height'>\n                {!(modalData.type == 5 || modalData.type == 3 || modalData.type == 1) ?\n                    <Form.Group className='mb-3'>\n                        <Form.Check type=\"switch\" id=\"enable_hotspot\" className=\"f-between\" label=\"Enable Hotspot\" defaultValue={enableHotspot} onChange={() => checkPermission('contentGallery', 'editGallery', true) ? changeHotspotStatus(activeCarousalPost ? getCarousal.hotspot : modalData.hotspot, activeCarousalPost ? activeCarousalPost : modalData.referenceId) : {}} checked={enableHotspot} reverse />\n                    </Form.Group>\n                    : ''}\n\n\n                <Dropdown show={true} className='position-relative w-100 mb-3' align={'end'}>\n                    <Dropdown.Toggle variant=\"outline-secondary\" className={`arrow_disabled p-0 border-0 mb-0 flex-grow-1 w-100 bg-transparent`}>\n                        <InputGroup>\n                            <Form.Control id=\"search_pro_\" className={errorMsg ? 'is-invalid' : ''} placeholder=\"Search Products By name, category, SKU, tags\" ref={this.outsideNewRef} onChange={this.filterProduct} value={searchText} autoComplete='off' onClick={() => this.setState({ showProd: !showProd, currentPage: 1 }, () => { if (prodClick) this.triggerAction(true) })} />\n                            <InputGroup.Text>\n                                <FontAwesomeIcon type={'solid'} icon={'magnifying-glass'} />\n                            </InputGroup.Text>\n                        </InputGroup>\n                    </Dropdown.Toggle>\n                    {errorMsg ? <span className=\"invalid-feedback\">{errorMsg}</span> : null}\n\n\n                    {loading ?\n                        <div className='w-100 dropdown-menu show dropdown-menu-end' style={{ minHeight: '320px' }} >\n                            <Loader bg={'white'} />\n                        </div>\n                        :\n                        showProd && productList && productList?.length > 0 ? <Dropdown.Menu show={showProd && productList ? true : false} className='w-100' >\n                            <div className='w-100' style={{ overflowX: 'auto', maxHeight: 320 }} ref={this.listRef} onScroll={this.handleScroll}>\n                                {productList.map((item, index) => {\n                                    const proImage = item?.product_image?.includes('?') ? `https://cdn.taggbox.com/v7/${item?.product_image}&w=100` : `https://cdn.taggbox.com/v7/${item?.product_image}?w=100`\n                                    return (<Dropdown.Item key={index} data-item=\"product\" onClick={() => checkPermission('contentGallery', 'editGallery', true) ? this.addProduct(item, modalData.referenceId) : {}} className='d-flex'>\n                                        <div className=\"w-64px d-flex flex-shrink-0 me-2\">\n                                            <ImageType mediaClass={'position-relative overflow-hidden w-100 border rounded-1'} size={100} height={64} width={64} url={proImage} alt={\"\"} isCover={true} />\n                                        </div>\n                                        <div className=\"d-flex align-items-start flex-column overflow-hidden w-100\">\n                                            <p className=\"fs-9 fw-medium mb-1 text-wrap \">{item.product_title}</p>\n                                            <span className=\"d-flex align-items-center tb_pro_price mb-1\">\n                                                {(item.product_price && item.product_price > 0) ?\n                                                    <span className='fs-8 fw-bold'>{item.price_currency_symbol}{item.product_discount > 0 ? item.product_discount : item.product_price}</span>\n                                                    :\n                                                    ''}\n                                                {(item.product_price && item.product_discount > 0 && item.product_discount < item.product_price) ?\n                                                    <span className='fs-8 ms-2 text-muted' style={{ textDecoration: 'line-through' }}>{item.price_currency_symbol}{item.product_price}</span>\n                                                    : null}\n                                            </span>\n                                            {item.recomended ?\n                                                <div className='f-between mt-2 w-100'>\n                                                    <Badge bg='primary' className='rounded-pill bg-transparent text-primary border border-primary'><FontAwesomeIcon icon={'sparkles'} iconClass={'me-1'} /> Ai-Recommended</Badge>\n                                                    <div className='position-relative' style={{ marginRight: -5 }}>\n                                                        <Image src={baseUrl('media/svg/trusense.svg')} height={20} width={100} alt='trueSense' fluid />\n                                                    </div>\n                                                </div>\n                                                :\n                                                <p className='fs-10 text-muted mb-0'>\n                                                    {item.shopify_product_type ? <div> Category:  {item.shopify_product_type}</div> : ''}\n                                                </p>\n                                            }\n                                        </div>\n                                    </Dropdown.Item>);\n                                })}\n                            </div>\n                            <hr />\n                            <Dropdown.Item className='f-center' id=\"add_product\" href={`/content/products`}>\n                                <FontAwesomeIcon type={'solid'} icon={'plus'} iconClass={'me-1'} />\n                                Upload New Products\n                            </Dropdown.Item>\n                        </Dropdown.Menu>\n                            :\n                            <></>\n                    }\n                </Dropdown>\n                <div className='position-relative'>\n                    <Form.Group className='mb-3'>\n                        <Form.Control id=\"search_pro_\" className={errorMsg ? 'is-invalid' : ''} placeholder=\"Search with multiple tags\" onChange={this.product_tags_search} value={searchTag} autoComplete='off' />\n                    </Form.Group>\n                    {showtags && productTags ?\n                        <Dropdown.Menu show={true} className='w-100'>\n                            {productTags.map((tag, index) => {\n                                return <Dropdown.Item className='f-center overflow-hidden' key={`prd_tags_${index}`} onClick={() => this.getData_bySelected_Tag(tag)}>\n                                    <p className='fs-10 text-muted text-ellipsis mb-0'>{tag}</p>\n                                </Dropdown.Item>\n                            })}\n                        </Dropdown.Menu>\n                        : ''}\n                </div>\n                <div className=\"mb-3 mb-xl-4\">\n                    <div className=\"tags-group d-flex align-items-center flex-wrap overflow-hidden w-100\">\n                        {selectedTag && selectedTag.length > 0 ? selectedTag.map((selectedTag, i) => {\n                            return <Badge key={selectedTag.toString()} className=\"me-1 mb-1 px-3 py-2 f-center bg-secondary overflow-hidden\">\n                                <span className=' text-break text-wrap text-start'>{selectedTag}</span>\n                                <Button variant='link' size='sm' className=\"p-0 ms-1 text-gray-800\" onClick={() => this.removeTag(selectedTag)}>\n                                    <FontAwesomeIcon type={'solid'} icon={'xmark'} />\n                                </Button>\n                            </Badge>\n                        })\n                            :\n                            ''}\n                    </div>\n                </div>\n\n                {postproduct && postproduct?.length > 0 ?\n                    postproduct.map((Item, index) => {\n                        return <div key={index} className='p-2 box-shadow mb-2 rounded-2 d-flex align-items-center position-relative border'>\n                            <span className='position-absolute start-0 translate-middle h-18px w-18px rounded-circle f-center bg-dark text-gray-100 top-50 fs-10 fw-medium' style={{ zIndex: 1 }}>{index + 1}</span>\n                            <div className='d-flex flex-grow-1 align-items-center overflow-hidden' style={{ maxWidth: 'calc(100% - 32px)' }}>\n                                <div className=\"w-44px d-flex flex-shrink-0 me-2\">\n                                    <ImageType mediaClass={'position-relative overflow-hidden w-100 border rounded-1'} size={100} height={44} width={44} url={Item?.product?.product_image} alt={\"\"} isCover={true} />\n                                </div>\n                                <div className=\"d-flex align-items-start flex-column overflow-hidden w-100\">\n                                    <p className=\"fs-9 fw-medium mb-1 text-wrap text-break\">{Item?.product?.product_title || \"\"}</p>\n                                    <div className=\"d-flex align-items-center mb-1\">\n                                        {Item.product.product_discount != 0 && Item.product.product_discount != Item.product.product_price ?\n                                            <span className='fs-8 fw-bold me-2'>{Item.product.discount_currency_symbol}{Math.trunc(Item.product.product_discount * 100) / 100}</span>\n                                            :\n                                            <span className='fs-8 fw-bold me-2'>{Item.product.discount_currency_symbol}{Math.trunc(Item.product.product_price * 100) / 100}</span>}\n                                        {(Item.product.product_discount && Item.product.product_discount > 0) ? <span className='fs-8 text-muted' style={{ textDecoration: 'line-through' }}>{Item.product.discount_currency_symbol}{Item.product.product_discount > 0 ? Item.product.product_price : ''}</span> : ''}\n                                    </div>\n                                </div>\n                            </div>\n                            <Button variant=\"icon\" size=\"sm\" className=\"btn-active-danger\" aria-label=\"delete\" onClick={() => this.removeTaggProduct(Item.product.product_sku, Item.product.id, Item.post_id, Item.id)}>\n                                <FontAwesomeIcon type={'solid'} icon={'trash-can'} />\n                            </Button>\n                        </div>\n                    }) :\n                    <div className='f-center py-3 text-gray-300 mb-10'>\n                        <span className='h-40px w-40px rounded-circle me-2 border f-center fs-4'><FontAwesomeIcon type={'light'} icon={'bag-shopping'} /></span>\n                        No Products Tagged Yet\n                    </div>\n                }\n\n                {![142738, 142737].includes(user.id) ? <div className='d-flex align-items-center badge-light-primary px-3 py-4 rounded-2 mt-2'>\n                    <p className='fs-7 text-gray-800 pe-3 mb-0'>\n                        Get rid of manual product tagging with AI\n                        <FontAwesomeIcon icon={'sparkle'} iconClass=\"ms-1 text-warning\" />\n                    </p>\n                    <Button className=\"text-nowrap\" onClick={() => this.clickToShowContact(true, \"Tag Product Talk to sales\")}>\n                        Talk to sales\n                    </Button>\n                </div> : null}\n                <ContactModal type={type} show={showContactUs} onCloseModel={() => this.clickToShowContact(false, \"\")} />\n                <div>\n                </div>\n            </div>\n            {/* <h3 className=\"p-4 fs-8 f-between mb-0 border-top\">\n                    <span className=\"fw-medium\">Suggested Products</span>\n                    <Badge bg='primary' className='rounded-pill bg-transparent text-primary border border-primary'>Ai-Recommended</Badge>\n                </h3>\n                <div className='mb-3'>\n                    <div className='overflow-auto px-4 pt-1' style={{maxHeight:340}}>\n                        <div class=\"p-2 box-shadow mb-2 rounded-2 d-flex align-items-center position-relative border\">\n                            <div className=\"d-flex flex-grow-1 align-items-center\">\n                                <div className=\"w-60px d-flex flex-shrink-0 me-2\">\n                                    <ImageType mediaClass={'position-relative overflow-hidden w-100 border rounded-1'} size={100} height={60} width={60} url={'https://lh3.googleusercontent.com/d/1ngv3ZqRrow25w-jc62ZlOaWbWGe6TkWi=s220?authuser=0'} alt={\"\"} />\n                                </div>\n                                <div className=\"d-flex align-items-start flex-column overflow-hidden w-100\">\n                                    <p className=\"fs-9 fw-medium mb-1 text-wrap \">Apple iPhone 12</p>\n                                    <div className=\"d-flex align-items-center tb_pro_price mb-1\">\n                                        <span className='fs-8 text-muted' style={{textDecoration:'line-through'}}>$1349</span>\n                                    </div>\n                                </div>\n                            </div>\n                            <Button variant=\"icon\" size=\"sm\" className=\"btn-active-primary rounded-circle h-24px w-24px\">\n                                <FontAwesomeIcon icon={'plus'}/>\n                            </Button>\n                        </div>\n                        <div class=\"p-2 box-shadow mb-2 rounded-2 d-flex align-items-center position-relative border\">\n                            <div className=\"d-flex flex-grow-1 align-items-center\">\n                                <div className=\"w-60px d-flex flex-shrink-0 me-2\">\n                                    <ImageType mediaClass={'position-relative overflow-hidden w-100 border rounded-1'} size={100} height={60} width={60} url={'https://lh3.googleusercontent.com/d/1ngv3ZqRrow25w-jc62ZlOaWbWGe6TkWi=s220?authuser=0'} alt={\"\"} />\n                                </div>\n                                <div className=\"d-flex align-items-start flex-column overflow-hidden w-100\">\n                                    <p className=\"fs-9 fw-medium mb-1 text-wrap \">Apple iPhone 12</p>\n                                    <div className=\"d-flex align-items-center tb_pro_price mb-1\">\n                                        <span className='fs-8 text-muted' style={{textDecoration:'line-through'}}>$1349</span>\n                                    </div>\n                                </div>\n                            </div>\n                            <div className=\"bg-success text-gray-100 f-center rounded-circle h-24px w-24px\">\n                                <FontAwesomeIcon icon={'check'}/>\n                            </div>\n                        </div>\n                    </div>\n                </div> */}\n        </div>\n        )\n    }\n}\n\n\n\nconst mapStateToProps = (state) => {\n    return {\n        total_pages: state.products?.total_pages,\n        searchProducts: state.products?.searchProducts,\n        loadingTagProduct: state.products?.loadingTagProduct,\n        moderation: state.moderation,\n        ctaData: state.ctaData?.data,\n        user: state.authorized?.userData?.user_data?.user,\n    }\n}\n\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        SEARCH_PRODUCTS_TEXT: (text) => dispatch(({ type: SEARCH_BY_PRODUCTS, payload: text })),\n        ACTION_PRODUCT_LIST_FORTAG: (page, showPost, tag, search, callBack, referenceId, newMedia) => dispatch(ACTION_PRODUCT_LIST_FORTAG(page, showPost, tag, search, callBack, referenceId, newMedia)),\n        TAG_PRODUCT_ACTION: (productIds, product, referenceId, location_hotspot, hostpot, feedId, callBack) => dispatch(TAG_PRODUCT_ACTION(productIds, product, referenceId, location_hotspot, hostpot, feedId, callBack)),\n        REMOVE_TAGGED_PRODUCT_ACTION: (productIds, product_sku, productId, referenceId, id, callBack) => dispatch(REMOVE_TAGGED_PRODUCT_ACTION(productIds, product_sku, productId, referenceId, id, callBack)),\n        // ENABLE_HOTSPOT_ACTION: (id, referenceId, callBack) => dispatch(ENABLE_HOTSPOT_ACTION(id, referenceId, callBack)),\n        getUserInfo_afterChanges: () => dispatch(getUserInfo_afterChanges()),\n        fetchProductList: (page, showPost, tag, search, callBack, referenceId, newMedia) => dispatch(fetchProductList(page, showPost, tag, search, callBack, referenceId, newMedia)),\n    }\n}\nexport default connect(mapStateToProps, mapDispatchToProps)(TagProducts);","import React, { Component } from 'react';\nimport { connect } from \"react-redux\";\nimport ReactHtmlParser from 'react-html-parser';\nimport HtmlParser from 'react-html-parser';\nimport { Nav, Tab, Table, Badge, Image, Button } from 'react-bootstrap';\nimport { GET_NETWORK_ICON, MEDIA_REPLACE_URL, GET_NETWORK_NAME, SENTIMENTS_CALC } from '../../../../../../utils';\n// import { postPostUpdateAction, loadAssetsDataWithDispatch, tagsFilter } from '../../../../Services/Actions/assetsActions'\nimport { baseUrl, FontAwesomeIcon } from '../../../../../../Assets/AssetsHelper';\nimport Author from '../../../CommonComponents/Author/Author';\nimport TagProducts from './TagProducts';\nimport Rating from '../../../CommonComponents/Rating';\n\nclass ContentModalAside extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            //tagString:['#macdonald', 'Restaurant', 'Burger', '#macdonaldUSA', 'California', '#starbucks', 'Restaurant'],\n            descriptionEditable: false,\n            addTagButton: true,\n            //tagInputValue : ''\n            tagString: [],\n            newTag: \"\",\n            listTags: [],\n            selectedOption: null,\n            content: \"\",\n            changesStatus: false\n        };\n\n        this.editorEnable = React.createRef();\n        this.editorEnableButton = React.createRef();\n    }\n\n    onClickToRemoveTag = (index) => event => {\n        let { tagString } = this.state;\n        tagString.splice(index, 1)\n        this.setState({ tagString, changesStatus: true })\n\n    }\n\n    componentWillMount() {\n        const { tagList } = this.props\n        if (tagList && tagList.length > 0) {\n            var listTags = []\n            tagList.map((item) => {\n                listTags.push({ value: item, label: item })\n            })\n            this.setState({ listTags })\n\n\n        }\n\n    }\n\n    addTagButtonValue = () => {\n        this.setState({\n            addTagButton: false\n        })\n    }\n\n    // tagInputValueFun = (value) => {\n    //     this.setState({\n    //         tagInputValue : value\n    //     })\n    // }\n\n    descriptionToggle() {\n        this.setState({\n            descriptionEditable: true\n        })\n    }\n\n    componentDidMount() {\n        document.addEventListener('click', this.handleOutsideClick);\n        this.setInitialState();\n    }\n\n    componentDidUpdate(prevProps) {\n        if (prevProps.modalData !== this.props.modalData) {\n            this.setInitialState();\n        }\n    }\n    setInitialState = () => {\n        const { modalData } = this.props\n        if (modalData && Object.keys(modalData).length > 0) {\n            if (modalData.tags && String(modalData.tags).length > 0) this.setState({ tagString: String(modalData.tags).split(\",\"), content: modalData.postcontent })\n            else this.setState({ tagString: [], content: modalData.postcontent })\n        }\n        this.setState({\n            textAreaHeight: (this.state.content.length / 35).toFixed() * 20\n        })\n    }\n\n    handleOutsideClick = (event) => {\n        if (this.editorEnable && this.editorEnable.current && !this.editorEnable.current.contains(event.target) && (this.editorEnableButton && !this.editorEnableButton.current.contains(event.target)) && this.editorEnableButton && !this.editorEnableButton.current.contains(event.target) !== null) {\n            this.setState({\n                descriptionEditable: false\n            })\n        } else {\n            if (this.editorEnable && this.editorEnable.current && (!this.editorEnable.current.contains(event.target) && this.editorEnable.current.contains(event.target) !== null)) {\n                this.setState({\n                    descriptionEditable: true\n                })\n            }\n        }\n    }\n\n    onClickNewAddTag = event => {\n        const { newTag, tagString } = this.state;\n        const { modalData } = this.props\n\n        if (event.key === 'Enter' || event.keyCode === 13) {\n            if (newTag && String(newTag).length >= 3) {\n                tagString.push(newTag)\n                this.setState({ tagString, newTag: \"\", selectedOption: null, changesStatus: true, addTagButton: true })\n            }\n            else {\n\n            }\n        }\n    }\n\n    addNewTag = event => this.setState({ newTag: event.target.value, changesStatus: true })\n\n    onClickToSave = event => {\n        const { tagString } = this.state;\n        const { modalData } = this.props;\n        if (tagString && tagString.length > 0) {\n            // this.props.postAddTag({\n            //     \"postId\": String(modalData.id),\n            //     \"tags\": tagString.join(\",\")\n            // }, () => this.props.loadAssetsDataWithDispatch()) \n        }\n\n    }\n\n    setNewTags = (selectedOption) => {\n        if (selectedOption && selectedOption.value) this.setState({ newTag: selectedOption.value, selectedOption })\n        else this.setState({ newTag: \"\", selectedOption: null })\n\n\n    };\n\n    onChangeContent = event => {\n        this.setState({ content: event.target.value, changesStatus: true })\n    }\n    onChangeTag = event => {\n        this.setState({ newTag: event.target.value })\n    }\n    onSaveChanges = event => {\n        const { modalData } = this.props;\n        const { tagString, content } = this.state;\n        const data = {\n            \"action\": \"4\",\n            \"source\": String(modalData.collection),\n            \"destination\": String(modalData.collection),\n            \"postId\": String(modalData.id),\n            \"postFile\": modalData.postFile,\n            \"tags\": tagString.join(\",\"),\n            \"content\": content\n        }\n        // this.props.postPostUpdateAction(data, () => {\n        //     this.props.loadAssetsDataWithDispatch()\n        //     this.setState({ descriptionEditable: false, addTagButton: true, changesStatus: false })\n        //     //this.props.editMediaCallback(false)\n        // })\n\n    }\n    onFilterWithTag = (value) => event => {\n        const { modalCallback, tagsFilter } = this.props\n        tagsFilter(value)\n        setTimeout(() => modalCallback(false), 200)\n    }\n\n    contentHeight = (content) => {\n        var contentLines = (content.length / 35)\n        var contentLinesInt = Math.round(contentLines);\n        return contentLines >= contentLinesInt ? (contentLinesInt + 1) * 20 + 20 : contentLinesInt * 20 + 20\n    }\n\n    render() {\n        const { descriptionEditable, addTagButton, tagString, content, changesStatus, newTag } = this.state\n        const { modalData, networkData, collections, isTrash, changeHotspotStatus, enableHotspot, activeCarousalPost, activeCarousalPostsList, carousalPostsList, updateCarousalPost, isShoppable } = this.props\n        const modifiedNetworkId = modalData.networkId == 18 ? 2 : modalData.networkId\n        const socialNetwork = networkData && networkData.length > 0 ? networkData.filter((network) => network.id == modifiedNetworkId) : []\n        return <Tab.Container id=\"modal_aside_\" defaultActiveKey={isShoppable ? \"tag_product\" : \"details\"}>\n            <Nav variant=\"underline\" className='border-bottom'>\n                {isShoppable ? <Nav.Item>\n                    <Nav.Link className='ms-3 py-3' eventKey=\"tag_product\">\n                        <FontAwesomeIcon type={'solid'} icon={'bag-shopping'} iconClass={'me-1 fs-6'} />\n                        Tag products\n                    </Nav.Link>\n                </Nav.Item> : null}\n                <Nav.Item>\n                    <Nav.Link className='ms-3 py-3' eventKey=\"details\">\n                        <FontAwesomeIcon type={'solid'} icon={'image'} iconClass={'me-1 fs-6'} />\n                        Details\n                    </Nav.Link>\n                </Nav.Item>\n            </Nav>\n            <Tab.Content className='m_sideCont_scroll_'>\n                <Tab.Pane eventKey=\"tag_product\">\n                    <TagProducts updateCarousalPost={updateCarousalPost} carousalPostsList={carousalPostsList} activeCarousalPostsList={activeCarousalPostsList} activeCarousalPost={activeCarousalPost} modalData={modalData} changeHotspotStatus={changeHotspotStatus} enableHotspot={enableHotspot} />\n                </Tab.Pane>\n                <Tab.Pane eventKey=\"details\">\n                    <div className={`position-relative`}>\n                        <div className='px-4 mt-3'>\n                            <Table className=\"table-borderless mb-0\">\n                                <tbody>\n                                    <tr>\n                                        <td className=\"py-xxl-2 py-1 px-0 min-w-100 w-25\"><span className=\"text-muted\">Author</span></td>\n                                        <td className=\"py-xxl-2 py-1 px-0 w-75\">\n                                            <div className=\"d-flex align-items-center mr-2 cursor-pointer\" onClick={modalData.link ? event => window.open(modalData.link, \"_blank\") : null}>\n                                                <Author className={'symbol symbol-34 rounded-circle flex-shrink-0 me-2 overflow-hidden'}\n                                                    imageSize={38}\n                                                    symbolClass={'symbol-label fs-8'}\n                                                    name={modalData.postname} profileUrl={MEDIA_REPLACE_URL(modalData.picture)} networkId={modalData.networkId ? modalData.networkId : 0} />\n                                                <div>\n                                                    <p className=\" mb-0 text-break fw-bold\">{modalData.postname}</p>\n                                                    <small className=\"mb-0 text-muted text-break\">@{modalData.username}</small>\n                                                </div>\n                                            </div>\n                                        </td>\n                                    </tr>\n                                    <tr>\n                                        <td className=\"py-xxl-2 py-1 px-0 min-w-100 w-25\"><span className=\"text-muted\">Network</span></td>\n                                        <td className=\"py-xxl-2 py-1 px-0 w-75\">\n                                            <div className=\"d-flex align-items-center\">\n                                                <span className=\"me-2 d-flex\">\n                                                {modalData.networkId !=0 ? <img className=\"img-fluid\" src={baseUrl(`media/icons/social-icons/${GET_NETWORK_ICON(modalData.networkId)}.svg`)} height={18} width={18} alt={modalData.networkId ? modalData.networkId : 0} />:''}\n                                                </span>\n                                                <span className=\"\">{modalData.networkId == 0 ? '': GET_NETWORK_NAME(modalData.networkId)}</span>\n                                            </div>\n                                        </td>\n                                    </tr>\n                                    <tr>\n                                        <td className=\"py-xxl-2 py-1 px-0 min-w-100 w-25\"><span className=\"text-muted\">Feed name</span></td>\n                                        <td className=\"py-xxl-2 py-1 px-0 w-75\">\n                                            {modalData.feedname && modalData.networkId == 32 ?\n                                                <img className=\"img-fluid me-2\" src={baseUrl(`media/icons/social-icons/${GET_NETWORK_ICON(32)}.svg`)} height={18} width={18} alt=\"Chrome\" />\n                                                : null}\n                                            <span className=\" text-break\">{modalData.feedname ? ReactHtmlParser(modalData.feedname) : \n                                            modalData.networkId == 0 ? <><img className=\"img-fluid\" src={baseUrl(`media/icons/social-icons/${GET_NETWORK_ICON(0)}.svg`)} height={18} width={18} alt={0} /> Manual Upload </>\n                                            :'--'}</span>\n                                        </td>\n                                    </tr>\n                                    {/* <tr>\n                                                <td className=\"py-xxl-2 py-1 px-0 min-w-100 w-25\"><span className=\"text-muted\">Created</span></td>\n                                                <td className=\"py-xxl-2 py-1 px-0 w-75\"> <span className=\" text-break\">{moment(modalData.created).utcOffset(0).format(\"DD MMM YYYY hh:mmA\")}</span></td>\n                                            </tr>\n                                            <tr>\n                                                <td className=\"py-xxl-2 py-1 px-0 min-w-100 w-25\"><span className=\"text-muted\">Modified</span></td>\n                                                <td className=\"py-xxl-2 py-1 px-0 w-75\"> <span className=\" text-break\">{moment(modalData.modified).utcOffset(0).format(\"DD MMM YYYY hh:mmA\")}</span></td>\n                                            </tr> */}\n                                    {\n                                        modalData.ugcstatus ? <>\n                                            {modalData.ugcstatus == 2 ? <tr>\n                                                <td className=\"py-xxl-2 py-1 px-0 min-w-100 w-25\"><span className=\"text-muted\">Rights</span></td>\n                                                <td className=\"py-xxl-2 py-1 px-0 w-75\">\n                                                    <div className=\"d-flex align-items-center flex-wrap text-success\">\n                                                        <span className=\"fs-6 me-1\">\n                                                            <FontAwesomeIcon type={'solid'} icon={'user-check'} />\n                                                        </span>\n                                                        <span className=\"fw-medium\">Request Approved</span>\n                                                    </div>\n                                                </td>\n                                            </tr> : modalData.ugcstatus == 1 ? <tr>\n                                                <td className=\"py-xxl-2 py-1 px-0 min-w-100 w-25\"><span className=\"text-muted\">Rights</span></td>\n                                                <td className=\"py-xxl-2 py-1 px-0 w-75\">\n                                                    <div className=\"d-flex align-items-center flex-wrap text-warning\">\n                                                        <span className=\"fs-6 me-1\">\n                                                            <FontAwesomeIcon type={'solid'} icon={'user-clock'} />\n                                                        </span>\n                                                        <span className=\"fw-medium\">Request Pending</span>\n                                                    </div>\n                                                </td>\n                                            </tr> : modalData.ugcstatus == 3 ? <tr>\n                                                <td className=\"py-xxl-2 py-1 px-0 min-w-100 w-25\"><span className=\"text-muted\">Rights</span></td>\n                                                <td className=\"py-xxl-2 py-1 px-0 w-75\">\n                                                    <div className=\"d-flex align-items-center flex-wrap text-danger\">\n                                                        <span className=\"fs-6 me-1\">\n                                                            <FontAwesomeIcon type={'solid'} icon={'user-xmark'} />\n                                                        </span>\n                                                        <span className=\"fw-medium\">Request Rejected</span>\n                                                    </div>\n                                                </td>\n                                            </tr> : null}\n                                        </> : null\n                                    }\n                                    {parseInt(modalData.sentiment) > 0 ? <tr>\n                                        <td className=\"py-xxl-2 py-1 px-0 min-w-100 w-25\"><span className=\"text-muted\">Post Sentiment</span></td>\n                                        <td className=\"py-xxl-2 py-1 px-0 w-75\"> <span className=\" text-break\">\n                                            <span className=\"d-flex fs-8  text-break\">\n                                                <div className='h-16px w-16px me-1 d-flex'>\n                                                    <img className='img-fluid' src={baseUrl(`media/icons/emoji/emoji${SENTIMENTS_CALC(modalData.sentiment).item}.svg`)} height={16} width={16} alt='' />\n                                                </div>\n                                                {SENTIMENTS_CALC(modalData.sentiment).label}\n                                            </span>\n\n                                        </span></td>\n                                    </tr> : null}\n                                    {modalData.recommendation && (modalData.type == 2 || modalData.type == 4) ?\n                                        <tr>\n                                            <td className=\"py-xxl-2 py-1 px-0 min-w-100 w-25\">\n                                                <p className=\"text-muted mb-1 text-nowrap me-2\">Ai Recommendation </p>\n                                                <Image className='invert' src={baseUrl('media/svg/trusense.svg')} height={26} width={110} fluid/>\n                                            </td>\n                                            <td className=\"py-xxl-2 py-1 px-0 w-75\">\n                                                <div className=\"d-flex align-items-start\">\n                                                    <div className={`h-12px w-12px rounded-circle d-flex flex-shrink-0 mt-1 ${modalData.recommendation.type == 1 ? 'bg-success' : modalData.recommendation.type == 2 ? 'bg-warning' : modalData.recommendation.type == 3 ? 'bg-danger' : null}`}></div>\n                                                    <span className=\" text-break ps-1\">{modalData.recommendation.label} ({modalData.recommendation.score}%)</span>\n                                                </div>\n                                            </td>\n                                        </tr>\n                                        : null}\n                                    {modalData.rating > 0 && modalData.type != 1 ? <tr>\n                                        <td className=\"py-xxl-2 py-1 px-0 min-w-100 w-25\"><span className=\"text-muted\">Rating</span></td>\n                                        <td className=\"py-xxl-2 py-1 px-0 w-75\">\n                                            <div className='d-flex justify-content-start'>\n                                                <Rating className={'fs-6'} iconClass=\"me-1\" rating={modalData.rating}/>\n                                            </div>\n                                        </td>\n                                    </tr>: null}\n                                </tbody>\n                            </Table>\n                        </div>\n                        {tagString && tagString.length > 0 ? <>\n                            <h3 className=\"border-bottom p-4 fs-8\">\n                                <span className=\"fw-medium\">Tag</span>\n                            </h3>\n                            <div className=\"tags-group d-flex align-items-center flex-wrap mb-2\">\n                                <div className='px-4 mt-3'>\n                                    {\n                                        tagString.map((Item, index) => {\n                                            return Item && String(Item).length > 0 ? <Badge key={index} bg=\"\" className={`${index == 99999 ? 'border-gradient' : 'border'}`}>\n                                                <span className=''>{Item}</span>\n                                            </Badge> : null\n\n                                        })\n                                    }\n                                </div>\n                            </div>\n                        </>\n                            : null}\n                        <h3 className=\"border-bottom p-4 fs-8\">\n                            <span className=\"fw-medium\">Description</span>\n                        </h3>\n                        <div className=\"px-4 mb-3\">\n                            <div className=\"d-flex flex-grow-1 pe-2\">\n                                <p style={{ whiteSpace: 'pre-line', wordBreak: 'break-word' }}>{HtmlParser(content)}</p>\n                            </div>\n                        </div>\n                    </div>\n                </Tab.Pane>\n            </Tab.Content>\n        </Tab.Container>\n    }\n}\n\n\nconst mapStateToProps = (state) => {\n    return {\n        networkData: state?.networks?.networkData,\n        tagList: state?.tags?.tagList,\n        isShoppable: state.authorized?.userData?.user_data?.UserRule?.shoppableStatus\n    }\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        // postAddTag: (data, callback) => dispatch(postAddTag(data, callback)),\n        // postPostUpdateAction: (data, calback) => dispatch(postPostUpdateAction(data, calback)),\n        // loadAssetsDataWithDispatch: () => dispatch(loadAssetsDataWithDispatch()),\n        // tagsFilter: (refId) => dispatch(tagsFilter(refId)),\n    }\n}\nexport default connect(mapStateToProps, mapDispatchToProps)(ContentModalAside);\n\n"],"names":["TagProducts","Component","constructor","props","super","setLastSearchTag","modalData","this","setState","prevState","loading","productList","handleClickOutsideTagProduct","event","_this$tagProductRef","_this$tagProductRef$c","tagProductRef","current","contains","target","showtags","handleClickOutside","_this$outsideNewRef$c","outsideNewRef","showProd","filterProduct","e","keyword","value","searchText","triggerAction","firstClick","selectedTag","prodClick","state","SEARCH_PRODUCTS_TEXT","fetchProductList","responceApi","referenceId","newMedia","postFile","length","data","removeTag","tagToRemove","updatedSelectedTag","filter","tag","searchTag","productTags","_this$props$modalData","_this$props$modalData2","_this$props$modalData3","product_tags_search","loadingTag","debouncedProductTagsSearch","productTagsSearchLogic","PRODUCT_TAGS_AUTOSEARCH","then","response","responseCode","responseData","catch","error","console","getData_bySelected_Tag","tags","Set","_this$props$modalData4","_this$props$modalData5","_this$props$modalData6","handleScroll","listElement","listRef","getBoundingClientRect","bottom","window","innerHeight","scrolledToBottom","filterProductOnScrolle","addProduct","product","activeCarousalPost","check_hot","postproduct","check_hotspotLocation","location_hotspot","hostpot","productIds","map","item","shopify_product_id","toString","push","TAG_PRODUCT_ACTION","feedId","callbackMsg","firstTime","changePrdId","id","productId","updateCarousalPost","carousalPostsList","total_pages","currentPage","sentReq","_this$props$modalData7","_this$props$modalData8","_this$props$modalData9","ACTION_PRODUCT_LIST_FORTAG","completedPageCall","callbackRemove","removeTaggProduct","product_sku","checkPermission","REMOVE_TAGGED_PRODUCT_ACTION","clickToShowContact","status","type","showContactUs","tagedprod","errorMsg","visenzeId","visenzeProduct","React","outsideNewRef2","debouncedTriggerAction","debounce","bind","componentDidMount","activeCarousalPostsList","addEventListener","componentWillUnmount","removeEventListener","searchTimeout","clearTimeout","componentDidUpdate","prevProps","_modalData$postproduc","render","_modalData$imageList","changeHotspotStatus","enableHotspot","user","getCarousal","imageList","find","_jsx","className","children","_jsxs","Form","Group","Check","label","defaultValue","onChange","hotspot","checked","reverse","Dropdown","show","align","Toggle","variant","InputGroup","Control","placeholder","ref","autoComplete","onClick","Text","FontAwesomeIcon","icon","style","minHeight","Loader","bg","Menu","overflowX","maxHeight","onScroll","index","_item$product_image","proImage","product_image","includes","Item","ImageType","mediaClass","size","height","width","url","alt","isCover","product_title","product_price","price_currency_symbol","product_discount","textDecoration","recomended","Badge","iconClass","marginRight","Image","src","baseUrl","fluid","shopify_product_type","href","_Fragment","i","Button","_Item$product","_Item$product2","zIndex","maxWidth","discount_currency_symbol","Math","trunc","post_id","ContactModal","onCloseModel","connect","_state$products","_state$products2","_state$products3","_state$ctaData","_state$authorized","_state$authorized$use","_state$authorized$use2","products","searchProducts","loadingTagProduct","moderation","ctaData","authorized","userData","user_data","dispatch","text","SEARCH_BY_PRODUCTS","payload","page","showPost","search","callBack","getUserInfo_afterChanges","ContentModalAside","onClickToRemoveTag","tagString","splice","changesStatus","addTagButtonValue","addTagButton","setInitialState","Object","keys","String","split","content","postcontent","textAreaHeight","toFixed","handleOutsideClick","editorEnable","editorEnableButton","descriptionEditable","onClickNewAddTag","newTag","key","keyCode","selectedOption","addNewTag","onClickToSave","setNewTags","onChangeContent","onChangeTag","onSaveChanges","collection","join","onFilterWithTag","modalCallback","tagsFilter","setTimeout","contentHeight","contentLines","contentLinesInt","round","listTags","componentWillMount","tagList","descriptionToggle","document","networkData","collections","isTrash","isShoppable","modifiedNetworkId","networkId","network","Tab","Container","defaultActiveKey","Nav","Link","eventKey","Content","Pane","Table","link","open","Author","imageSize","symbolClass","name","postname","profileUrl","MEDIA_REPLACE_URL","picture","username","GET_NETWORK_ICON","GET_NETWORK_NAME","feedname","ReactHtmlParser","ugcstatus","parseInt","sentiment","SENTIMENTS_CALC","recommendation","score","rating","Rating","whiteSpace","wordBreak","HtmlParser","_state$networks","_state$tags","_state$authorized$use3","networks","UserRule","shoppableStatus"],"sourceRoot":""}