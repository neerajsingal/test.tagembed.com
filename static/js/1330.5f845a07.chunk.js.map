{"version":3,"file":"static/js/1330.5f845a07.chunk.js","mappings":"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","sources":["../node_modules/react-bootstrap/esm/types.js","../node_modules/react-bootstrap/esm/DropdownButton.js","app/Layout/Main/Collaborator/ManageCollaborator.js","../node_modules/react-bootstrap/esm/InputGroupText.js","../node_modules/react-bootstrap/esm/InputGroup.js"],"sourcesContent":["import PropTypes from 'prop-types';\nconst alignDirection = PropTypes.oneOf(['start', 'end']);\nexport const alignPropType = PropTypes.oneOfType([alignDirection, PropTypes.shape({\n  sm: alignDirection\n}), PropTypes.shape({\n  md: alignDirection\n}), PropTypes.shape({\n  lg: alignDirection\n}), PropTypes.shape({\n  xl: alignDirection\n}), PropTypes.shape({\n  xxl: alignDirection\n}), PropTypes.object]);","import * as React from 'react';\nimport PropTypes from 'prop-types';\nimport Dropdown from './Dropdown';\nimport DropdownToggle from './DropdownToggle';\nimport DropdownMenu from './DropdownMenu';\nimport { alignPropType } from './types';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nconst propTypes = {\n  /**\n   * An html id attribute for the Toggle button, necessary for assistive technologies, such as screen readers.\n   * @type {string}\n   */\n  id: PropTypes.string,\n  /** An `href` passed to the Toggle component */\n  href: PropTypes.string,\n  /** An `onClick` handler passed to the Toggle component */\n  onClick: PropTypes.func,\n  /** The content of the non-toggle Button.  */\n  title: PropTypes.node.isRequired,\n  /** Disables both Buttons  */\n  disabled: PropTypes.bool,\n  /**\n   * Aligns the dropdown menu.\n   *\n   * _see [DropdownMenu](#dropdown-menu-props) for more details_\n   *\n   * @type {\"start\"|\"end\"|{ sm: \"start\"|\"end\" }|{ md: \"start\"|\"end\" }|{ lg: \"start\"|\"end\" }|{ xl: \"start\"|\"end\"}|{ xxl: \"start\"|\"end\"} }\n   */\n  align: alignPropType,\n  /** An ARIA accessible role applied to the Menu component. When set to 'menu', The dropdown */\n  menuRole: PropTypes.string,\n  /** Whether to render the dropdown menu in the DOM before the first time it is shown */\n  renderMenuOnMount: PropTypes.bool,\n  /**\n   *  Which event when fired outside the component will cause it to be closed.\n   *\n   * _see [DropdownMenu](#dropdown-menu-props) for more details_\n   */\n  rootCloseEvent: PropTypes.string,\n  /**\n   * Menu color variant.\n   *\n   * Omitting this will use the default light color.\n   */\n  menuVariant: PropTypes.oneOf(['dark']),\n  /**\n   * Allow Dropdown to flip in case of an overlapping on the reference element. For more information refer to\n   * Popper.js's flip [docs](https://popper.js.org/docs/v2/modifiers/flip/).\n   *\n   */\n  flip: PropTypes.bool,\n  /** @ignore */\n  bsPrefix: PropTypes.string,\n  /** @ignore */\n  variant: PropTypes.string,\n  /** @ignore */\n  size: PropTypes.string\n};\n\n/**\n * A convenience component for simple or general use dropdowns. Renders a `Button` toggle and all `children`\n * are passed directly to the default `Dropdown.Menu`. This component accepts all of\n * [`Dropdown`'s props](#dropdown-props).\n *\n * _All unknown props are passed through to the `Dropdown` component._ Only\n * the Button `variant`, `size` and `bsPrefix` props are passed to the toggle,\n * along with menu-related props are passed to the `Dropdown.Menu`\n */\nconst DropdownButton = /*#__PURE__*/React.forwardRef(({\n  title,\n  children,\n  bsPrefix,\n  rootCloseEvent,\n  variant,\n  size,\n  menuRole,\n  renderMenuOnMount,\n  disabled,\n  href,\n  id,\n  menuVariant,\n  flip,\n  ...props\n}, ref) => /*#__PURE__*/_jsxs(Dropdown, {\n  ref: ref,\n  ...props,\n  children: [/*#__PURE__*/_jsx(DropdownToggle, {\n    id: id,\n    href: href,\n    size: size,\n    variant: variant,\n    disabled: disabled,\n    childBsPrefix: bsPrefix,\n    children: title\n  }), /*#__PURE__*/_jsx(DropdownMenu, {\n    role: menuRole,\n    renderOnMount: renderMenuOnMount,\n    rootCloseEvent: rootCloseEvent,\n    variant: menuVariant,\n    flip: flip,\n    children: children\n  })]\n}));\nDropdownButton.displayName = 'DropdownButton';\nDropdownButton.propTypes = propTypes;\nexport default DropdownButton;","import { Component } from \"react\";\nimport { Alert, Button, Card, Col, Container, Dropdown, DropdownButton, Form, InputGroup, Row, Table } from \"react-bootstrap\";\nimport { Link } from \"react-router-dom\";\nimport { Loader } from \"../CommonComponents/Loader\";\nimport { connect } from \"react-redux\";\nimport withRouter from \"../../../routes/WithRouter\";\nimport Swal from \"sweetalert2\";\nimport { FontAwesomeIcon } from \"../../../../Assets/AssetsHelper\";\nimport ProfileImage from \"../CommonComponents/ProfileImage/ProfileImage\";\nimport { TOAST_ERROR, validateEmail } from \"../../../../utils\";\nimport { addCollaborator, getCollaborator } from \"../../../../actions/collaboratorActions\";\nimport queryString from 'query-string';\n\nconst publishHeadings = [ {name:\"Website\", type:\"website\"}, {name:\"Email Campaigns\", type:\"email_camp\"}, {name:\"Shopon.bio\", type:\"shopon\"}]\n\nconst featureHeadings = [ {name:\"Analytics\", type:\"analytics\"}, {name:\"Apps & more\", type:\"apps_more\"}]\n\nclass ManageCollaborator extends Component {\n    state={\n        isAdmin:true,\n        emailId:\"\",\n        userType:1,\n        createGallery:false,\n        viewGallery:[],\n        editGallery:[],\n        website:0,\n        email_camp: 0,\n        manageAccount: 0,\n        manageFeed: 0,\n        analytics: 1,\n        isEmailError : false,\n        loading:true,\n        isChanged:false,\n        isEdit:false,\n        isSuperAdmin:false,\n        shopon:0,\n        apps_more:0,\n        product_catalog:0\n    }\n\n    componentDidMount(){\n        this.checkEditInvite()\n    }\n\n    checkEditInvite = () =>{\n        const { userData, params } = this.props\n        if (params && Object.keys(params).length > 0 && params.id){\n            getCollaborator(params.id).then(response=>{\n                const {responseData} = response.data\n                this.getCollaboratorData(responseData)\n            }).catch(ex=>this.setState({loading:false},()=>{}))\n        }else this.setState({isAdmin: userData && (userData.collaborator == ''|| userData.collaborator.activeAccount == \"0\") ? true : false, loading:false})\n    }\n\n    getCollaboratorData = (data) =>{\n        const { allWalls } = this.props\n        const parsed = queryString.parse(window.location.search);\n        const { networkManager, otherSettings, publish, contentGallery, product_catalog } = data.permissions\n        data.role == 1 ? this.setState({isAdmin:Object.keys(parsed).length>0 ? false : true, emailId: data['UserCollab.emailId'],loading:false, isEdit:true}):\n        this.setState({\n            isAdmin: false,\n            emailId: data['UserCollab.emailId'],\n            createGallery:contentGallery.createGallery,\n\n            viewGallery:contentGallery.viewGallery.includes(\"0\") ? allWalls.map(item => item.id) : allWalls\n            .filter(item => contentGallery.viewGallery.includes(String(item.id)))\n            .map(item => item.id),\n\n            editGallery: contentGallery.editGallery.includes(\"0\") ? allWalls.map(item => item.id) : allWalls\n            .filter(item => contentGallery.editGallery.includes(String(item.id)))\n            .map(item => item.id),\n\n            email_camp: publish.email_camp,\n            website: publish.website,\n            shopon: publish.shopon,\n            manageAccount: networkManager.manageAccount,\n            manageFeed: networkManager.manageFeed,\n            apps_more: otherSettings.apps_more,\n            analytics: otherSettings.analytics,\n            product_catalog : product_catalog,\n            loading:false,\n            isEdit:true\n        })\n    }\n\n    onChangeMailId = event =>{ this.setState({emailId:event.target.value, isChanged:true, isEmailError: false}) }    \n\n    onSelectGallery = (gallery, action) => {\n        let { viewGallery, editGallery, galleryList } = this.state\n        if(action == 1){\n            if (viewGallery.includes(gallery)) viewGallery = viewGallery.filter(gal => gal != gallery)\n            else viewGallery.push(gallery)\n            this.setState({ viewGallery: viewGallery, isChanged:true })\n        }\n        else if(action == 2){\n            if (editGallery.includes(gallery)){\n                editGallery = editGallery.filter(gal => gal != gallery)\n                viewGallery = viewGallery.filter(gal => gal != gallery)\n            }\n            else{\n                editGallery.push(gallery)\n                if(!viewGallery.includes(gallery))viewGallery.push(gallery)\n            } \n            this.setState({ editGallery: editGallery, viewGallery:viewGallery, isChanged:true })\n        }\n    }\n\n    onSelectAllGallerys = (event, action) => {\n        const { allWalls } = this.props\n        if(action == 1 ){\n            this.setState({ viewGallery: event.target.checked ? allWalls.map(wall=> {return wall.id}) : [], isChanged:true })\n        }\n        else if ( action == 2){\n            this.setState({ viewGallery: event.target.checked ? allWalls.map(wall=> {return wall.id}) : [], isChanged:true, editGallery: event.target.checked ? allWalls.map(wall=> {return wall.id}) : [] })\n        }\n    }\n\n    onCreateGallery = (event) => {this.setState({createGallery: event.target.checked ? true : false, isChanged:true})}\n\n    onChangePermission = (type, action) => {\n        let stateName = this.state[type];\n        if(stateName == 0) this.setState({[type]: action})\n        else this.setState({[type]: this.state[type] == action ? 0 : action})\n    }\n\n    onCancel = ()=>{\n        if(this.state.isChanged){\n            Swal.fire({\n                title: this.state.isEdit ? 'Confirming cancellation' : 'Are you sure?',\n                text: this.state.isEdit ? \"All changes will be discarded.\" : \"All selections will be deleted permanently.\",\n                icon: 'warning',\n                showCancelButton: true,\n                confirmButtonText: this.state.isEdit ? 'Yes, Cancel it!' : 'Yes, proceed.',\n                confirmButtonColor:this.state.isEdit ? `var(--bs-success)`: '',\n            }).then((result) => {\n                if (result.isConfirmed) {\n                    this.props.navigate('/collaborator')\n                }\n            })\n        }\n        else this.props.navigate('/collaborator')\n    }\n\n    onSubmit = () => {\n        const {emailId , viewGallery, editGallery, isAdmin, isEdit} = this.state\n        const { createCollaborator, collaboratorList } = this.props\n        if(emailId.trim().length>0 && validateEmail(emailId)){\n            const exist = collaboratorList.length > 0 ? collaboratorList.filter(collab => collab['UserCollab.emailId'] == emailId) : []\n            if(!isEdit && exist.length > 0){\n                TOAST_ERROR(\"Email already exists.\")\n            }\n            else {\n                if(isAdmin==false && viewGallery.length==0 && editGallery.length==0) TOAST_ERROR(\"Please select atleast 1 Gallery.\")\n                else{\n                    const payload = this.createPayload()\n                    createCollaborator(payload,() => this.props.navigate('/collaborator'),isEdit ? true : null)\n                }\n            }\n            \n        }\n        else{\n            if(emailId.trim().length<=0 || !validateEmail(emailId)){\n                this.setState({isEmailError:true})\n                TOAST_ERROR(\"Enter valid email address.\")\n            }\n        }\n        \n    }\n\n    createPayload = () =>{\n        const { isAdmin, emailId, website, shopon, email_camp, manageAccount, manageFeed, analytics, apps_more, createGallery, viewGallery, editGallery, product_catalog} = this.state\n        const { allWalls } = this.props\n\n        const payloadData = isAdmin ? {\n            emailId: emailId,\n            userType: 1,\n            } :\n            {\n            emailId: emailId,\n            userType: 2,\n            permission:{\n                contentGallery:{\n                    createGallery: createGallery ? 2 : 0,\n                    viewGallery: viewGallery.length == allWalls.length ? \"0\" : String(viewGallery),\n                    editGallery : editGallery.length == allWalls.length ? \"0\" : String(editGallery)\n                },\n                publish:{\n                    website: website,\n                    email_camp: email_camp,\n                    shopon: shopon,\n                },\n                networkManager:{\n                    manageAccount: manageAccount,\n                    manageFeed : manageFeed\n                },\n                otherSettings:{\n                    analytics: analytics == 1 || analytics == 2 ?  analytics : 1,\n                    apps_more: apps_more\n                },\n                product_catalog: product_catalog\n            }\n        } \n\n        return payloadData\n    }\n\n    render(){\n        const { isAdmin, manageAccount, manageFeed, createGallery, isEmailError, loading, emailId, isEdit, editGallery, viewGallery, product_catalog } = this.state\n        const { allWalls, userData } = this.props\n        return <>\n                <div className=\"subheader\">\n                    <Container fluid>\n                        <div className=\"nav nav-underline\">\n                            <div className='nav-item'>\n                                <Link to={'/profile'} className=\"nav-link\" title=\"Profile\">Profile</Link>\n                            </div>\n                            <div className='nav-item'>\n                                <Link to={'/transactions'} className=\"nav-link\" title=\"Plan Details\">Plan details</Link>\n                            </div>\n                            <div className='nav-item'>\n                                <Link to={'/social-account'} className=\"nav-link\" title=\"Accounts\">Social accounts</Link>\n                            </div>\n                            <div className='nav-item'>\n                                <Link to={'/collaborator'} className=\"nav-link active\" title=\"Collaborator\">Collaborator</Link>\n                            </div>\n                        </div>\n                    </Container>\n                </div>\n                <div className='d-flex flex-column flex-column-fluid full-content'>\n                <div className=\"container\">\n                    <Card className=\"mb-xl-5 mb-4\" style={{minHeight:'calc(100vh - 250px)'}}>\n                        {loading ? <Loader/> :\n                        <Card.Body className=\"p-lg-6\">\n                            <div style={{minHeight:'calc(100vh - 330px)'}}>\n                            <div className='pb-3 mb-8 border-bottom'>\n                                <Row className='mb-4'>\n                                    <Col xl={5} lg={6}>\n                                        <Form.Label htmlFor=\"basic-url\">Email address<strong className=\"text-danger\">*</strong></Form.Label>\n                                        <div className=\"d-flex align-items-start\">\n                                            <InputGroup className=\"mb-3 me-3\" style={{maxWidth:600}}>\n                                                <InputGroup.Text className='text-dark'><FontAwesomeIcon type={'solid'} icon={'user-plus'} /></InputGroup.Text>\n                                                <Form.Control size='lg' aria-label=\"Text input with dropdown button\" placeholder='Enter email address' onChange={this.onChangeMailId} value={emailId} className={isEmailError ? 'is-invalid' : ''}/>\n                                                {isEmailError && <Form.Control.Feedback type=\"invalid\" className='d-block'>Enter valid email address.</Form.Control.Feedback>}\n                                            </InputGroup>\n                                            {userData && (userData.collaborator == '' || userData.collaborator.activeAccount==\"0\") ? <DropdownButton variant=\"outline-secondary\" className='mb-3' size=\"lg\" title={isAdmin ? 'Admin':'Manager'}>\n                                                <Dropdown.Item onClick={()=>this.setState({isAdmin:true})}>Admin</Dropdown.Item>\n                                                <Dropdown.Item onClick={()=>this.setState({isAdmin:false})}>Manager</Dropdown.Item>\n                                            </DropdownButton> \n                                            :null}\n                                        </div>\n                                    </Col>\n                                </Row>\n                                <Alert variant=\"primary\" className='border border-primary'>\n                                    <Alert.Heading className='f-center alert_icon_head'>\n                                        <span className='f-center'>\n                                        {isAdmin ? \"Admin *\" : \"Manager *\"}\n                                        </span>\n                                    </Alert.Heading>\n                                    <p className=\"fw-medium mb-0 fs-8 text-gray-700\">{isAdmin ? \"The Admin role enjoys full access to the Tagshop, allowing them to perform all functionalities and allowing them to add other managers.\" : \"The Manager role, in contrast, has limited access to the Tagshop and its functionalities. Their access is determined by the permissions they have been granted.\"}</p>\n                                </Alert>\n                            </div>\n                            {!isAdmin?\n                            <>\n                                <Row>\n                                    <Col lg={4}>\n                                        <h4 className=\"h5\"><FontAwesomeIcon icon={'image'} iconClass={'me-1 fs-6'}/>Content gallery <span className=\"text-danger\">*</span></h4>\n                                        <p>Collect posts from your preferred social channels in a curated content gallery. Moderate and modify the content, turn it shoppable and request rights directly from Tagshop to leverage it on your marketing touchpoints.</p>\n                                    </Col>\n                                    <Col lg={8}>\n                                        <Card className='mb-6 shadow-none'>\n                                            <Card.Body className='p-xxl-6'>\n                                                <div className=\"mb-2 d-flex flex-wrap\">\n                                                    <Form.Check inline label=\"View All Gallery\" name=\"vGallery\" className=\"me-3 mb-2\" type={'checkbox'} id={`inline-view`} onChange={event=> this.onSelectAllGallerys(event, editGallery.length > 0 && editGallery.length == viewGallery.length ? 2 : 1)} checked={viewGallery.length == allWalls.length && allWalls.length > 0  ? true : false}/>\n                                                    <Form.Check inline label=\"Edit All Gallery\" name=\"eGallery\" className=\"me-3 mb-2\" type={'checkbox'} id={`inline-edit`} onChange={event=> this.onSelectAllGallerys(event, 2)} checked={editGallery.length == allWalls.length && allWalls.length > 0 ? true : false}/>\n                                                    <Form.Check inline label=\"Create New Gallery\" name=\"createGallery\" className=\"me-3 mb-2\" type={'checkbox'} id={`inline-create`} onChange={this.onCreateGallery} checked={createGallery}/>\n                                                </div>\n                                                <Card className='mb-0 shadow-none overflow-hidden'>\n                                                    <Card.Body className='pe-lg-4 ps-lg-6 bg-gray-100'>\n                                                        {allWalls.map(gallery => {\n                                                            return <div className='d-flex align-items-center justify-content-between py-2 border-bottom' key={gallery.id}>\n                                                            <div className=\"d-flex align-items-center w-100\" style={{maxWidth:'calc(100% - 150px)'}}>\n                                                                <div className=\"d-flex align-items-center w-100\">\n                                                                    <ProfileImage className={'symbol symbol-38 rounded-2 flex-shrink-0 me-2 overflow-hidden'}\n                                                                        imageSize={38}\n                                                                        symbolClass={'symbol-label fs-6 bg-primary'}\n                                                                        name={gallery.name} profileUrl={''} networkId={''} />\n                                                                    <div className=\"overflow-hidden w-100 d-flex flex-grow-1 flex-column\">\n                                                                        <p className=\"text-gray-dark fw-semibold mb-0 text-ellipsis fs-8\">{gallery.name}</p>\n                                                                        <span className=\"fs-9 mb-0 text-gray-500 fw-medium text-ellipsis d-block\">{gallery.totalPost} Posts</span>\n                                                                    </div>\n                                                                </div>\n                                                            </div>\n                                                            <div key={`gallery-action-view`} className=\"my-2 d-flex\">\n                                                                <Form.Check reverse inline label=\"View\" name=\"gallery_action\" className=\"me-3 me-xl-10\" type={'checkbox'} id={`gallery-action-view`} checked={viewGallery.includes(gallery.id)} onChange={() => this.onSelectGallery(gallery.id,editGallery.includes(gallery.id) ? 2 : 1)}/>\n                                                                <Form.Check reverse inline label=\"Edit\" name=\"gallery_action\" type={'checkbox'} id={`gallery-action-edit`} onChange={event=>this.onSelectGallery(gallery.id,2)} checked={editGallery.includes(gallery.id) ? true : false}/>\n                                                            </div>\n                                                        </div>\n                                                        })}\n                                                    </Card.Body>\n                                                </Card>\n                                            </Card.Body>\n                                        </Card>\n                                    </Col>\n                                </Row>\n                                <Row>\n                                    <Col lg={4}>\n                                        <h4 className=\"h5\"><FontAwesomeIcon icon={'bag-shopping'} iconClass={'me-1 fs-6'}/>Product catalog</h4>\n                                        <p>It is a list of products you can sync across platforms (Shopify, WooCommerce, Magento), including essential details like descriptions, images, and pricing to help customers make purchasing decisions.</p>\n                                    </Col>\n                                    <Col lg={8}>\n                                        <Card className='mb-6 shadow-none'>\n                                            <Card.Body className='p-xxl-6'>\n                                                <Table borderless responsive className='mb-0'>\n                                                    <tbody>\n                                                        <tr>\n                                                            <td className='fw-medium'>Products</td>\n                                                            <td className='text-end'>\n                                                                <div className=\"d-flex justify-content-end\">\n                                                                    <Form.Check reverse inline label=\"View\" name=\"prod-view\" className=\"me-3 me-xl-10\" type={'checkbox'} id={`prod-view`} checked={product_catalog == 2 || product_catalog == 1 ? true : false} onChange={event=>this.onChangePermission('product_catalog', product_catalog == 2 ? 2 : 1)}/>\n                                                                    <Form.Check reverse inline label=\"Edit\" name=\"prod-edit\" type={'checkbox'} id={`prod-edit`} onChange={event=>this.onChangePermission('product_catalog', 2)} checked={product_catalog == 2 ? true : false}/>\n                                                                </div>\n                                                            </td>\n                                                        </tr>\n                                                    </tbody>\n                                                </Table>\n                                            </Card.Body>\n                                        </Card>\n                                    </Col>\n                                </Row>\n                                <Row>\n                                    <Col lg={4}>\n                                        <h4 className=\"h5\"><FontAwesomeIcon icon={'paper-plane'} iconClass={'me-1 fs-6'}/>Publishing touchpoints</h4>\n                                        <p>Seamlessly publish your curated assets, such as shoppable UGC galleries, and shop the looks on websites, product pages, email campaigns, and within social bios with Shopon.bio. </p>\n                                    </Col>\n                                    <Col lg={8}>\n                                        <Card className='mb-6 shadow-none'>\n                                            <Card.Body className='p-xxl-6'>\n                                                <Table borderless responsive className='mb-0'>\n                                                    <tbody>\n                                                        {publishHeadings.map((head,index)=>{\n                                                            return <tr>\n                                                            <td className='fw-medium'>{head.name}</td>\n                                                            <td className='text-end'>\n                                                                <div key={index} className=\"d-flex justify-content-end\">\n                                                                    <Form.Check reverse inline label=\"View\" name={head.type} className=\"me-3 me-xl-10\" type={'checkbox'} id={head.type} checked={this.state[head.type] == 2 || this.state[head.type] == 1 ? true : false} onChange={event=>this.onChangePermission(head.type, this.state[head.type] == 2 ? 2 : 1)}/>\n                                                                    <Form.Check reverse inline label=\"Edit\" name={head.type} type={'checkbox'} id={head.type} onChange={event=>this.onChangePermission(head.type, 2)} checked={this.state[head.type] == 2 ? true : false}/>\n                                                                </div>\n                                                            </td>\n                                                            </tr>\n                                                        })}\n                                                    </tbody>\n                                                </Table>\n                                            </Card.Body>\n                                        </Card>\n                                    </Col>\n                                </Row>\n                                <Row>\n                                    <Col lg={4}>\n                                        <h4 className=\"h5\"><FontAwesomeIcon icon={'grid-2-plus'} iconClass={'me-1 fs-6'}/>Network manager</h4>\n                                        <p>The Network manager, accessible via your My profile tab, enables you to explore Social Accounts. You can add up to 5 social networks to expand your professional network. </p>\n                                    </Col>\n                                    <Col lg={8}>\n                                        <Card className='mb-6 shadow-none'>\n                                            <Card.Body className='p-xxl-6'>\n                                            <Table borderless responsive className='mb-0'>\n                                                    <tbody>\n                                                        <tr>\n                                                            <td className='fw-medium'>Add & Manage Accounts</td>\n                                                            <td className='text-end'>\n                                                                <div key={`socialAccount-action-view`} className=\"d-flex justify-content-end\">\n                                                                    <Form.Check reverse inline label=\"View\" name=\"socialAccount_action\" className=\"me-3 me-xl-10\" type={'checkbox'} id={`socialAccount-action-view`} checked={manageAccount == 2 || manageAccount == 1} onChange={()=>this.onChangePermission('manageAccount', manageAccount == 2 ? 2 : 1)}/>\n                                                                    <Form.Check reverse inline label=\"Edit\" name=\"socialAccount_action\" type={'checkbox'} id={`socialAccount-action-edit`} onChange={event=>this.onChangePermission('manageAccount', 2)} checked={manageAccount == 2}/>\n                                                                </div>\n                                                            </td>\n                                                        </tr>\n                                                        <tr>\n                                                            <td className='fw-medium'>Create & Manage feeds</td>\n                                                            <td className='text-end'>\n                                                                <div key={`connection-action-view`} className=\"d-flex justify-content-end\">\n                                                                    <Form.Check reverse inline label=\"View\" name=\"connection_action\" className=\"me-3 me-xl-10\" type={'checkbox'} id={`connection-action-view`} checked={manageFeed == 1 || manageFeed == 2} onChange={()=>this.onChangePermission('manageFeed', manageFeed == 2 ? 2 : 1)}/>\n                                                                    <Form.Check reverse inline label=\"Edit\" name=\"connection_action\" type={'checkbox'} id={`connection-action-edit`} onChange={event=> this.onChangePermission('manageFeed', 2)} checked={manageFeed == 2} />\n                                                                </div>\n                                                            </td>\n                                                        </tr>\n                                                    </tbody>\n                                            </Table>\n                                            </Card.Body>\n                                        </Card>\n                                    </Col>\n                                </Row>\n                                <Row>\n                                    <Col lg={4}>\n                                        <h4 className=\"h5\"><FontAwesomeIcon icon={'grid-2'} iconClass={'me-1 fs-6'}/>Additional features</h4>\n                                        <p>Additional features include Style Studio for branding, Auto-Moderation, and Creators and Insights for content management. For a comprehensive suite of tools, you'll also find All Access, Apps and More, and Analytics. </p>\n                                    </Col>\n                                    <Col lg={8}>\n                                        <Card className='mb-6 shadow-none'>\n                                            <Card.Body className='p-xxl-6'>\n                                            <Table borderless responsive className='mb-0'>\n                                                    <tbody>\n                                                        {featureHeadings.map((head,index)=>{\n                                                            return <tr>\n                                                                <td className='fw-medium'>{head.name}</td>\n                                                                <td className='text-end'>\n                                                                    <div key={index} className=\"d-flex justify-content-end\">\n                                                                        <Form.Check reverse inline label=\"View\" name={head.type} className=\"me-3 me-xl-10\" type={'checkbox'} id={head.type} checked={this.state[head.type] == 2 || this.state[head.type] == 1 || head.type == 'analytics' ? true : false} onChange={event=>this.onChangePermission(head.type, 2)} disabled={head.type==\"analytics\"}/>\n                                                                        <Form.Check reverse inline label=\"Edit\" name={head.type} type={'checkbox'} id={head.type} onChange={event=>this.onChangePermission(head.type, 2)} checked={this.state[head.type] == 2 ? true : false}/>\n                                                                    </div>\n                                                                </td>\n                                                            </tr>\n                                                        })}\n                                                    </tbody>\n                                            </Table>\n                                            </Card.Body>\n                                        </Card>\n                                    </Col>\n                                </Row>\n                            </>\n                            :null}\n                            </div>\n                            <div className=\"d-flex justify-content-end align-items-center flex-wrap mt-3 mt-lg-4\">\n                                <div className=\"block-center\">\n                                    <Button className=\"btn btn-secondary btn-min-w me-3\" onClick={()=>this.onCancel()}>Cancel</Button>\n                                    <Button variant={'primary'} onClick={()=>this.onSubmit()}>{isEdit ? \"Update\" : \"Create\"} {isAdmin ? 'admin' : 'manager'}</Button>\n                                </div>\n                            </div>\n                        </Card.Body>}\n                    </Card>\n                </div>\n            </div>\n            </>\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        allWalls: state.dashboardData?.dashboarddata?.allWalls,\n        userData: state.authorized?.userData?.user_data,\n        collaboratorList: state.collaborator.collaboratorList,\n    }\n}\n\nconst mapDispatchToProps = dispatch =>({\n    createCollaborator : (payload, callback, isEdit) => dispatch(addCollaborator(payload, callback, isEdit)),\n})\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withRouter(ManageCollaborator))","\"use client\";\n\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst InputGroupText = /*#__PURE__*/React.forwardRef(({\n  className,\n  bsPrefix,\n  as: Component = 'span',\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'input-group-text');\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    className: classNames(className, bsPrefix),\n    ...props\n  });\n});\nInputGroupText.displayName = 'InputGroupText';\nexport default InputGroupText;","\"use client\";\n\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport { useMemo } from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport FormCheckInput from './FormCheckInput';\nimport InputGroupContext from './InputGroupContext';\nimport InputGroupText from './InputGroupText';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst InputGroupCheckbox = props => /*#__PURE__*/_jsx(InputGroupText, {\n  children: /*#__PURE__*/_jsx(FormCheckInput, {\n    type: \"checkbox\",\n    ...props\n  })\n});\nconst InputGroupRadio = props => /*#__PURE__*/_jsx(InputGroupText, {\n  children: /*#__PURE__*/_jsx(FormCheckInput, {\n    type: \"radio\",\n    ...props\n  })\n});\nconst InputGroup = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  size,\n  hasValidation,\n  className,\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'div',\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'input-group');\n\n  // Intentionally an empty object. Used in detecting if a dropdown\n  // exists under an input group.\n  const contextValue = useMemo(() => ({}), []);\n  return /*#__PURE__*/_jsx(InputGroupContext.Provider, {\n    value: contextValue,\n    children: /*#__PURE__*/_jsx(Component, {\n      ref: ref,\n      ...props,\n      className: classNames(className, bsPrefix, size && `${bsPrefix}-${size}`, hasValidation && 'has-validation')\n    })\n  });\n});\nInputGroup.displayName = 'InputGroup';\nexport default Object.assign(InputGroup, {\n  Text: InputGroupText,\n  Radio: InputGroupRadio,\n  Checkbox: InputGroupCheckbox\n});"],"names":["alignDirection","PropTypes","alignPropType","sm","md","lg","xl","xxl","propTypes","id","href","onClick","title","isRequired","disabled","align","menuRole","renderMenuOnMount","rootCloseEvent","menuVariant","flip","bsPrefix","variant","size","DropdownButton","React","_ref","ref","children","props","_jsxs","Dropdown","_jsx","DropdownToggle","childBsPrefix","DropdownMenu","role","renderOnMount","displayName","publishHeadings","name","type","featureHeadings","ManageCollaborator","Component","constructor","arguments","state","isAdmin","emailId","userType","createGallery","viewGallery","editGallery","website","email_camp","manageAccount","manageFeed","analytics","isEmailError","loading","isChanged","isEdit","isSuperAdmin","shopon","apps_more","product_catalog","checkEditInvite","userData","params","this","Object","keys","length","getCollaborator","then","response","responseData","data","getCollaboratorData","catch","ex","setState","collaborator","activeAccount","allWalls","parsed","queryString","parse","window","location","search","networkManager","otherSettings","publish","contentGallery","permissions","includes","map","item","filter","String","onChangeMailId","event","target","value","onSelectGallery","gallery","action","galleryList","gal","push","onSelectAllGallerys","checked","wall","onCreateGallery","onChangePermission","onCancel","Swal","text","icon","showCancelButton","confirmButtonText","confirmButtonColor","result","isConfirmed","navigate","onSubmit","createCollaborator","collaboratorList","trim","validateEmail","exist","collab","TOAST_ERROR","createPayload","permission","componentDidMount","render","_Fragment","className","Container","fluid","Link","to","Card","style","minHeight","Loader","Body","Row","Col","Form","Label","htmlFor","InputGroup","maxWidth","Text","FontAwesomeIcon","Control","placeholder","onChange","Feedback","Item","Alert","Heading","iconClass","Check","inline","label","ProfileImage","imageSize","symbolClass","profileUrl","networkId","totalPost","reverse","Table","borderless","responsive","head","index","Button","connect","_state$dashboardData","_state$dashboardData$","_state$authorized","_state$authorized$use","dashboardData","dashboarddata","authorized","user_data","dispatch","payload","callback","addCollaborator","withRouter","InputGroupText","as","useBootstrapPrefix","classNames","hasValidation","contextValue","useMemo","InputGroupContext","Provider","assign","Radio","FormCheckInput","Checkbox"],"sourceRoot":""}