{"version":3,"file":"static/js/628.f982bf93.chunk.js","mappings":"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","sources":["app/Layout/Main/Collaborator/Collaborator.js"],"sourcesContent":["import { Component } from \"react\";\nimport { Badge, Button, Card, Container, Dropdown, OverlayTrigger, Table, Tooltip } from \"react-bootstrap\";\nimport { Link } from \"react-router-dom\";\nimport ProfileImage from \"../CommonComponents/ProfileImage/ProfileImage\";\nimport moment from \"moment\";\nimport { Loader } from \"../CommonComponents/Loader\";\nimport { FontAwesomeIcon } from \"../../../../Assets/AssetsHelper\";\nimport EmptyWithIcon from \"../CommonComponents/Empty/EmptyWithIcon\";\nimport { connect } from \"react-redux\";\nimport { deleteCollaborator, getCollaboratorList, updatePermission, updateStatus } from \"../../../../actions/collaboratorActions\";\nimport { GET_COLLABORATOR_LIST } from \"../../../../reducer/keys\";\nimport Swal from \"sweetalert2\";\nimport withRouter from \"../../../routes/WithRouter\";\nimport { TOAST_ERROR } from \"../../../../utils\";\n\n\nconst rowHeadings = [{name:\"Collaborator\", width:160}, {name:\"Invited\", width:130}, {name:\"Status\", width:100}, {name:\"Permission\", width:100}, {name:\"Invited By\", width:120}, {name:\"Actions\", width:70}]\nclass Collaborator extends Component{\n\n    state = {\n        loading:true,\n        userRole: null\n\n    }\n\n    componentDidMount(){\n        const { userData } = this.props\n        if(userData) this.getCollaborators(userData)\n    }\n\n    componentWillReceiveProps(nextProps){\n        const { userData } = nextProps\n        if(JSON.stringify(userData) != JSON.stringify(this.props.userData)) this.getCollaborators(userData)\n    }\n\n    getCollaborators = (userData) => {\n        const { setCollaboratorList } = this.props\n        getCollaboratorList().then(response=>{\n            const userType = userData.collaborator == '' || userData.collaborator.activeAccount == 0 ? 3 : 0\n            const { workspace } = response.data.responseData\n            setCollaboratorList(workspace)\n            this.setState({loading:false, userRole: userType})\n        }).catch(ex=>{this.setState({loading:false},()=>{})})\n    }\n\n    modifyCollaborator = (value,type) => {\n        const { updateCollaboratorPermission, deleteCollaborator } = this.props\n        Swal.fire({\n            title: 'Are you sure?',\n            text: type == \"delete\" ? \"Do you wish to continue and delete the chosen item?\" : \"Modifying this setting will lead to alterations in permissions.\",\n            icon: 'warning',\n            showCancelButton: true,\n            confirmButtonText: type == \"delete\" ? \"Yes, delete it!\" : 'Yes, change permission!',\n            confirmButtonColor:type != \"delete\" ?`var(--bs-success)` : '',\n          }).then((result) => {\n            if (result.isConfirmed) type == \"delete\" ? deleteCollaborator({collaborators: String(value)}) : updateCollaboratorPermission(value)\n        })\n    }\n\n    render(){\n        const { loading, userRole } = this.state\n        const { collaboratorList, userData } = this.props\n        return <>\n                <div className=\"subheader\">\n                    <Container fluid>\n                        <div className=\"nav nav-underline\">\n                            <div className='nav-item'>\n                                <Link to={'/profile'} className=\"nav-link\" title=\"Profile\">Profile</Link>\n                            </div>\n                            {userData && (userData.collaborator == '' || userData.collaborator?.activeAccount == 0) ? <div className='nav-item'>\n                                <Link to={'/transactions'} className=\"nav-link\" title=\"Plan Details\">Plan details</Link>\n                            </div> : null}\n                            <div className='nav-item'>\n                                <Link to={'/social-account'} className=\"nav-link\" title=\"Accounts\">Social accounts</Link>\n                            </div>\n                            <div className='nav-item'>\n                                <Link to={'/collaborator'} className=\"nav-link active\" title=\"Collaborator\">Collaborator</Link>\n                            </div>\n                        </div>\n                    </Container>\n                </div>\n                <div className='d-flex flex-column flex-column-fluid full-content'>\n                <Container>\n                    <Card>\n                        <Card.Header className='f-between d-flex'>\n                            <h2 className=\"me-2 h4 my-3\">Collaborator panel</h2>\n                            <div className=\"f-center\">\n                                <Link to={'/collaborator/add'} className=\"btn btn-primary my-2 btn-sm\" title=\"Invite Collaborator\">\n                                    <FontAwesomeIcon icon={'plus'}/>\n                                    Invite collaborator\n                                </Link>\n                            </div>\n                        </Card.Header>\n                        <Card.Body>\n                            <div style={{minHeight:'calc(100vh - 240px)'}}>\n                            {loading ?<Loader/> : collaboratorList.length>0 ?\n                            <div className=\"table-responsive\" style={{minHeight:300}}>\n                                <Table size='lg' className=\"align-middle gs-0 gy-3\">\n                                    <thead className=\"thead-light\">\n                                        <tr>\n                                            {rowHeadings.map((head,index)=> {return <th key={index} className={`fw-bold text-nowrap ${head.name==\"Actions\" ? \"text-end\" : \"\"}`} style={{minWidth: head.width}}>{head.name}</th>})}\n                                        </tr>\n                                    </thead>\n                                    <tbody>\n                                    {collaboratorList.map(collaborator=>{return <tr>\n                                        <td>\n                                            <div className=\"d-flex align-items-center\">\n                                                <ProfileImage className={'symbol symbol-40 rounded-circle flex-shrink-0 me-2 overflow-hidden'}\n                                                    imageSize={40}\n                                                    symbolClass={'symbol-label fs-6 bg-primary'}\n                                                    name={collaborator['UserCollab.name']} profileUrl={collaborator['UserCollab.picture']} networkId={''} />\n                                                <div className=\"overflow-hidden\" style={{ maxWidth: 200 }}>\n                                                    <p className=\"text-gray-dark fw-semibold mb-0 text-ellipsis fs-8\">{collaborator['UserCollab.name']}</p>\n                                                    <span className=\"fs-9 mb-0 text-gray-500 fw-medium text-ellipsis d-block\">{collaborator['UserCollab.emailId']}</span>\n                                                </div>\n                                            </div>\n                                        </td>\n                                        <td>\n                                            <p className=\"text-gray-900 fw-medium mb-0 text-nowrap\">{moment(collaborator['UserCollab.created']).format(\"Do MMM YYYY\")}</p>\n                                            <span className=\"fs-9 fw-medium text-gray-500 text-nowrap\">{moment.utc(new Date(collaborator['UserCollab.created'])).format(\"h:mm a\")}</span>\n                                        </td>\n                                        <td>\n                                            {collaborator.status!=2 ?\n                                            <label className=\"form-check form-switch\">\n                                                <input className=\"form-check-input\" type=\"checkbox\" checked={collaborator.status==1} onChange={()=>this.props.updateStatus(collaborator)} />\n                                                </label>\n                                                :\n                                                <Badge bg=\"\" className=\"badge-light-warning\">Pending</Badge>\n                                            }\n                                        </td>\n                                        <td>\n                                            <div className=\"d-flex align-items-center\">\n                                                \n                                                {userRole == 3 ? <Dropdown style={{minWidth:200}}>\n                                                    <Dropdown.Toggle variant=\"secondary\" className=\"d-flex align-items-center w-100 justify-content-between bg-white fs-9\">\n                                                        {collaborator.role==1 ? \"Admin\" : \"Manager\"}\n                                                    </Dropdown.Toggle>\n                                                    <Dropdown.Menu className=\"w-100\">\n                                                        <Dropdown.Item key={0} onClick={()=> collaborator.role == 1 ? TOAST_ERROR(\"Collaborator is already an admin.\") : this.modifyCollaborator(collaborator, \"change\")}>Admin</Dropdown.Item>\n                                                        <Dropdown.Item key={1} onClick={()=> collaborator.role == 2 ? TOAST_ERROR(\"Collaborator is already a manager.\") : this.props.navigate(`/collaborator/edit/${collaborator.id}?permission=1`)}>Manager</Dropdown.Item>\n                                                    </Dropdown.Menu>\n                                                </Dropdown>:collaborator.role==1 ?\"Admin\" : \"Manager\"}\n                                            </div>\n                                        </td>\n                                        <td>\n                                            <div className=\"d-flex align-items-center cursor-pointer text-decoration-none\">\n                                                <ProfileImage className={'symbol symbol-36 rounded-circle flex-shrink-0 me-2 overflow-hidden'}\n                                                    imageSize={36}\n                                                    symbolClass={'symbol-label fs-6 bg-primary'}\n                                                    name={collaborator['UserAdmin.name']} profileUrl={collaborator['UserAdmin.picture']}/>\n                                                <p className=\"text-gray-dark fw-medium mb-0 text-ellipsis\">{collaborator['UserAdmin.name']}</p>\n                                            </div>\n                                        </td>\n                                        <td className=\"pr-0 text-end\">\n                                            <div className=\"d-flex align-items-center justify-content-end\">\n                                                <OverlayTrigger placement=\"top\" overlay={<Tooltip>Edit</Tooltip>}>\n                                                    <Link to={`/collaborator/edit/${collaborator.id}`} id={`col-edit-${collaborator.id}`} className={`btn btn-icon btn-sm btn-active-primary ms-2`} title=\"Edit Collaborator\">\n                                                        <FontAwesomeIcon type=\"solid\" icon={'pen'}/>\n                                                    </Link>\n                                                </OverlayTrigger>\n                                                <OverlayTrigger placement=\"top\" overlay={<Tooltip>Remove</Tooltip>}>\n                                                    <Button id={`col-remove-${collaborator.id}`} variant=\"icon\" size='sm' className={`btn-active-danger ms-2`} aria-label=\"delete\" onClick={()=>this.modifyCollaborator(collaborator.id, \"delete\")}>\n                                                        <FontAwesomeIcon type=\"solid\" icon={'trash-can'}/>\n                                                    </Button>\n                                                </OverlayTrigger>\n                                            </div>\n                                        </td>\n                                    </tr>})}\n                                    </tbody>\n                                </Table>\n                            </div>\n                                :  \n                                <div className=\"f-center\" style={{minHeight:'calc(100vh - 240px)'}}>\n                                    <EmptyWithIcon title=\"Uh-oh! Nothing to see here.\" desc={'You can start adding new collaborators here.'} icon={'user-plus'} button={{ text: 'Invite Collaborator', action:()=>this.props.navigate('/collaborator/add') }} isFullScreen={false} />\n                                </div>\n                            }\n                        \n                            </div>\n                        </Card.Body>\n                    </Card>\n                </Container> \n                </div>\n            </>\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n        collaboratorList: state.collaborator.collaboratorList,\n        userData: state.authorized?.userData?.user_data\n    }\n}\n\nconst mapDispatchToProps = dispatch =>({\n    deleteCollaborator : (id) => dispatch(deleteCollaborator(id)),\n    setCollaboratorList : (workspace) => dispatch({type: GET_COLLABORATOR_LIST, payload: workspace }),\n    updateCollaboratorPermission : (collaborator) => dispatch(updatePermission(collaborator)),\n    updateStatus: (collaborator) => dispatch(updateStatus(collaborator))\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withRouter(Collaborator))"],"names":["rowHeadings","name","width","Collaborator","Component","constructor","arguments","state","loading","userRole","getCollaborators","userData","setCollaboratorList","this","props","getCollaboratorList","then","response","userType","collaborator","activeAccount","workspace","data","responseData","setState","catch","ex","modifyCollaborator","value","type","updateCollaboratorPermission","deleteCollaborator","Swal","title","text","icon","showCancelButton","confirmButtonText","confirmButtonColor","result","isConfirmed","collaborators","String","componentDidMount","componentWillReceiveProps","nextProps","JSON","stringify","render","_userData$collaborato","collaboratorList","_jsxs","_Fragment","children","_jsx","className","Container","fluid","Link","to","Card","Header","FontAwesomeIcon","Body","style","minHeight","Loader","length","Table","size","map","head","index","minWidth","ProfileImage","imageSize","symbolClass","profileUrl","networkId","maxWidth","moment","format","Date","status","checked","onChange","updateStatus","Badge","bg","Dropdown","Toggle","variant","role","Menu","Item","onClick","TOAST_ERROR","navigate","id","OverlayTrigger","placement","overlay","Tooltip","Button","EmptyWithIcon","desc","button","action","isFullScreen","connect","_state$authorized","_state$authorized$use","authorized","user_data","dispatch","GET_COLLABORATOR_LIST","payload","updatePermission","withRouter"],"sourceRoot":""}