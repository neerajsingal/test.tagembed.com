{"version":3,"file":"static/js/204.6b8272aa.chunk.js","mappings":"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","sources":["app/Authentication/Components/GoogleLoginSuggestions.js","app/Authentication/Components/OtherAuthAction.js","app/Authentication/Login.js","app/Authentication/SocialAuthentication/SocialSignup.js","app/Authentication/TagembedRedirection.js"],"sourcesContent":["import React, { useEffect } from 'react';\nimport { GOOGLE_CLIENT_ID } from '../../../actions/constants';\nimport { toast } from 'react-toastify';\n\nconst GoogleLoginSuggestions = ({loginAction}) => {\n    const url = 'https://accounts.google.com/gsi/client';\n\n    const parseJwt = (token) => {\n        const base64Url = token.split('.')[1];\n        const base64 = base64Url.replace(/-/g, '+').replace(/_/g, '/');\n        const jsonPayload = decodeURIComponent(window.atob(base64).split('').map(function(c) {\n            return '%' + ('00' + c.charCodeAt(0).toString(16)).slice(-2);\n        }).join(''));\n        return JSON.parse(jsonPayload);\n    }\n\n    const googlePromptFun = () => {\n        if (window.google && Object.keys(window.google).length > 0 && window.google.accounts) {\n            window.google.accounts.id.initialize({\n                client_id: GOOGLE_CLIENT_ID,\n                callback: (response) => {\n                    if (response.credential) {\n                        try {\n                            const data = parseJwt(response.credential);\n                            loginAction(data);\n                        } catch (error) {\n                            toast.error('Something went wrong.', { autoClose: 3000 })\n                        }\n                    }\n                },\n            });\n            window.google.accounts.id.prompt();\n        }\n    }\n\n    useEffect(() => {\n        const script = document.createElement('script');\n        script.src = url;\n        script.async = true;\n        script.defer = true;\n        document.body.appendChild(script);\n        googlePromptFun()\n        return () => {\n            document.body.removeChild(script);\n        };\n    }, []);\n\n    return <></>\n};\n\nexport default GoogleLoginSuggestions;\n","import { Link } from 'react-router-dom';\nconst OtherAuthAction = ({ text, link, linkText }) => <div className=\" text-center fw-normal fs-8 mt-lg-5 mt-1 f-center mb-5\">{text}\n       <Link to={link} className=\"btn btn-link text-decoration-none fw-bold fs-8 p-0 ms-1\" title=\"Auth\">{linkText}</Link>\n</div>\nexport default OtherAuthAction;\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Link } from \"react-router-dom\";\nimport { userSignUp, loginUser } from '../../actions/loginActions'\nimport SocialSignIn from \"./SocialAuthentication/SocialSignup\";\n// import OtherAuthAction from \"./Components/OtherAuthAction\";\nimport { getCookieValue, parseAUTHJson, TOAST_ERROR, validateEmail } from \"../../utils\";\nimport { FontAwesomeIcon } from \"../../Assets/AssetsHelper\";\nimport { Cookies } from \"react-cookie\";\nimport { Form, Button, Alert } from 'react-bootstrap';\nimport { GOOGLE_AUTH_TOKEN } from \"../../actions/socialUrl\";\nimport { removeAuthLocalData } from \"../../utils/addAccount\";\nimport queryString from 'query-string';\nimport GoogleLoginSuggestions from \"./Components/GoogleLoginSuggestions\";\nimport { googleUserDetails } from \"../../utils/auth\";\nimport FormTerms from \"./Components/FormTerms\";\nimport OtherAuthAction from \"./Components/OtherAuthAction\";\nimport { DOMAIN_NAME } from \"../../actions/api\";\nimport TagembedRedirect from \"./TagembedRedirection\";\n\nconst cookies = new Cookies();\nclass Login extends Component {\n    constructor(props) { super(props); }\n    state = { accountEmail: null, accountPassword: null, emailError: null, passwordError: null, loginLoader: false, loginMailError: null, memberRemember: true, showPassword: false, resetAlert: 0, loginPwdError: null, tagembedRedirect: false }\n\n    handleMessage = async (event) => {\n        try {\n            const response = parseAUTHJson(event.data);\n            const { code, type } = response;\n            console.log(response, \"type\")\n            if (type == 'sign-login') {\n                if (code) {\n                    const { data: { responseData } } = await GOOGLE_AUTH_TOKEN(code);\n                    const { userInfo } = responseData || {}\n                    removeAuthLocalData();\n                    this.socialLogin({ accountFullName: userInfo?.name, accountEmailId: userInfo?.email, createFrom: 'google', picture: userInfo?.picture || \"\", authId: userInfo?.sub });\n                };\n            }\n        } catch (error) {\n        }\n    };\n\n    componentDidMount() {\n        window.addEventListener(\"message\", this.handleMessage)\n        // Set data-product attribute on <html> tag for login screen\n        try {\n            document.documentElement.setAttribute(\"data-product\", DOMAIN_NAME);\n        } catch (e) {}\n        const parsed = queryString.parse(window.location.search);\n        const { email, password, status } = cookies.get('__RememberDetails') || {}\n        this.setState({ accountEmail: email || '', accountPassword: password || '', memberRemember: status || false })\n        if (parsed && Object.keys(parsed.length > 0)) {\n            this.setState({ resetAlert: parsed.reset })\n        }\n    }\n\n    readAuthentication = (event) => {\n        const response = JSON.parse(event.data);\n        this.socialLogin(response)\n    }\n\n    emailTextChange = event => this.setState({ accountEmail: event.target.value, emailError: null, loginMailError: null })\n    passwordTextChange = event => this.setState({ accountPassword: event.target.value, passwordError: null, loginPwdError: null })\n\n    clickOnLogin = event => {\n        const { accountEmail, accountPassword, memberRemember } = this.state\n\n        this.setState({ loginLoader: true })\n        localStorage.setItem(\"socialLogin\", 0)\n        if (String(accountEmail)?.trim().length > 0 && validateEmail(accountEmail) && String(accountPassword)?.trim().length > 0) {\n            const userData = { emailId: accountEmail, password: accountPassword, loginType: \"web\" }\n            const RememberDetails = { email: accountEmail, password: accountPassword, status: true }\n            this.props.loginUser(userData, memberRemember, RememberDetails, this.props.history, this.callBackError);\n        }\n        else {\n            if (!accountEmail || String(accountEmail).trim().length == 0 || !validateEmail(accountEmail)) this.setState({ emailError: true })\n            if (!accountPassword || String(accountPassword).trim().length == 0) this.setState({ passwordError: true })\n            this.setState({ loginLoader: false })\n        }\n    }\n\n    responseCallback = (message) => {\n        const isValidMsg = (message && String(message).length > 0);\n        this.setState({ tagembedRedirect: isValidMsg ? message == \"showRedirectionPop\" : false, loginLoader: false });\n    }\n\n    getGoogleUserDetails = (token) => {\n        googleUserDetails(token).then(res => this.onGSocialLogin(\"google\", res.data));\n    }\n\n    onGSocialLogin = (provider, data) => {\n        const trackingPage = getCookieValue('tracking_URL')\n        const landingPage = getCookieValue('landing_URL')\n        if (data && Object.keys(data).length > 0) {\n            var picture = data.picture ? data.picture : \"\";\n            this.props.userSignUp({ fullName: data.name, emailId: data.email, password: \"\", trackingPage: trackingPage, landingPage: landingPage, activeProduct: \"0\", createFrom: provider, picture: picture, oauth_uid: data.sub, utm_source: provider }, this.props.history, this.responseCallback)\n        }\n    }\n\n    socialLogin = (socialData) => {\n        var { accountFullName, accountEmailId, createFrom, picture, authId } = socialData\n        localStorage.setItem(\"socialLogin\", 1)\n        const trackingPage = getCookieValue('tracking_URL')\n        const landingPage = getCookieValue('landing_URL')\n        this.props.userSignUp({ fullName: accountFullName, emailId: accountEmailId, password: \"\", trackingPage: trackingPage, landingPage: landingPage, activeProduct: \"0\", createFrom: createFrom, picture: picture, oauth_uid: authId, utm_source: createFrom == 'facebook' ? \"facebook_ads\" : createFrom }, this.props.history, this.responseCallback)\n    }\n\n    callBackError = (message) => this.setState({ loginMailError: String(message).toLowerCase().includes('email') ? message : '', loginLoader: false, emailError: String(message).toLowerCase().includes('email') ? true : false, passwordError: String(message).toLowerCase().includes('password') ? true : false, loginPwdError: String(message).toLowerCase().includes('password') ? message : '' }, () => { if (!(String(message).includes('email') || String(message).toLowerCase().includes('email') || String(message).toLowerCase().includes('password'))) TOAST_ERROR(message) })\n\n    componentWillUnmount() {\n        window.removeEventListener(\"message\", this.handleMessage);\n    }\n\n    render() {\n        const { accountEmail, accountPassword, emailError, passwordError, loginLoader, loginPwdError, memberRemember, showPassword, resetAlert, loginMailError, tagembedRedirect } = this.state;\n        return <><div className=\"w-100 mb-lg-0 mb-3\">\n            <GoogleLoginSuggestions loginAction={(data) => this.onGSocialLogin('google', data)} key={window.location.href} />\n            {resetAlert ? <Alert variant={resetAlert == 1 ? 'success' : 'danger'} className=\"fs-7 rounded-2\" dismissible>\n                {resetAlert == 1 ? 'You have successfully updated your password. You can login now with your new password.' : 'Link expired, please try again.'}\n            </Alert> : null}\n            <div className=\"text-start\">\n                <h1 className=\" mb-0 display-2 fw-bold mb-5\">\n                    Welcome back\n                </h1>\n                <SocialSignIn socialLogin={this.socialLogin} text=\"Log in with Google\" />\n            </div>\n            <form autoComplete=\"on\" onKeyPress={e => e.key == 'Enter' ? this.clickOnLogin() : ''}>\n                <div className=\"mb-8\">\n                    <Form.Group className=\"mb-4 mb-xl-5\">\n                        <Form.Label className=\"fw-bold \" htmlFor=\"email_\">Email</Form.Label>\n                        <Form.Control type=\"email\" size=\"lg\" placeholder=\"you@yourcompany.com\" className={`${emailError ? `is-invalid` : ``} mb-1`} value={accountEmail || ''} onChange={this.emailTextChange} title=\"Please enter email.\" />\n                        {emailError ? <span className=\"invalid-feedback\">{loginMailError ? loginMailError : accountEmail?.length ? 'Enter valid email.' : 'Email is required.'}</span> : null}\n                    </Form.Group>\n                    <Form.Group className=\"mb-4 mb-xl-5\">\n                        <Form.Label className=\"fw-bold \" htmlFor=\"password_\">Password</Form.Label>\n                        <span className={`position-relative d-block ${passwordError ? `is-invalid` : ``}`}>\n                            <Form.Control type={`${showPassword ? 'text' : 'password'}`} placeholder=\"Password\" size=\"lg\" className={`${passwordError ? `is-invalid` : ``} mb-1`} onChange={this.passwordTextChange} value={accountPassword || ''} title=\"Please enter password.\" />\n                            <span className=\"view_pass fs-7 btn btn-icon bg-transparent border-0 text-gray-500 position-absolute translate-middle top-50\" onClick={event => this.setState({ showPassword: !showPassword })}>\n                                <FontAwesomeIcon icon={showPassword ? 'eye' : 'eye-slash'} />\n                            </span>\n                        </span>\n                        {passwordError ? <div className=\"invalid-feedback\">{loginPwdError ? loginPwdError : 'Password is required.'}</div> : null}\n                    </Form.Group>\n                    <div className=\"d-flex justify-content-between align-items-center fw-semibold mb-4 mb-xl-5 pt-1\">\n                        <label className=\"form-check align-items-center mb-0\">\n                            <input className=\"form-check-input\" name=\"remember\" type=\"checkbox\" checked={memberRemember} onChange={e => this.setState({ memberRemember: e.target.checked })} />\n                            <span className=\"form-check-label fw-semibold\">Remember Me</span>\n                        </label>\n                        <Link className=\"pull-right forgot_password\" to={`/accounts/forgotpassword`} title=\"Forgot Password\">Forgot Password?</Link>\n                    </div>\n                </div>\n                <div className=\"d-grid mb-3\" >\n                    <Button variant=\"primary\" size={'lg'} className={`${loginLoader ? ' disabled' : ''}`} onClick={loginLoader ? null : this.clickOnLogin} >\n                        <span className=\"indicator-label\" style={{ display: loginLoader ? 'none' : 'block' }}>Log in with Email</span>\n                        <span className=\"indicator-progress\" style={{ display: !loginLoader ? 'none' : 'block' }}> Please wait...\n                            <span className=\"spinner-border spinner-border-sm align-middle ms-2\"></span>\n                        </span>\n                    </Button>\n                </div>\n            </form>\n            <OtherAuthAction text=\"Not a member yet?\" link={'/accounts/register'} linkText={'Sign up'} />\n        </div>\n            <FormTerms />\n            <TagembedRedirect show={tagembedRedirect} onHide={() => this.setState({ tagembedRedirect: false })} />\n        </>\n    }\n}\nconst mapStateToProps = (state) => {\n    return {}\n}\nconst mapDispatchToProps = dispatch => {\n    return {\n        userSignUp: (data, history, responseCallback) => dispatch(userSignUp(data, history, responseCallback)),\n        loginUser: (postbody, memberRemember, RememberDetails, history, callback) => dispatch(loginUser(postbody, memberRemember, RememberDetails, history, callback))\n    }\n}\nexport default connect(mapStateToProps, mapDispatchToProps)(Login);","import React from 'react'\nimport { Button, Image } from 'react-bootstrap'\nimport { baseUrl } from '../../../Assets/AssetsHelper'\nimport { getGoogleCode } from '../../../utils/auth';\n\nconst SocialSignIn = ({ text }) => {\n    const getGoogleAuth = () => {\n        localStorage.setItem(\"connectionType\", 'sign-login');\n        getGoogleCode();\n    }\n    return <div className=\"login_socials text-center\">\n        <Button variant='light' size='lg' id=\"googleplusSignIn\" onClick={getGoogleAuth} style={{ minWidth: 120 }} className='w-100 border-0 fw-bold '>\n            <Image className=\"me-2 h-20px w-20px\" src={baseUrl('media/icons/social-icons/google.svg')} width=\"20\" height=\"20\" alt='Google'/>\n            {text || `Log in with Google`}\n        </Button>\n        <div className=\"d-flex align-items-center flex-column justify-content-between py-4 w-100\">\n            <div className=\"separator separator-content my-2 my-md-3 w-100\">\n                <span className=\"text-muted fw-semibold fs-6 f-center text-nowrap\" style={{ width: 50 }}>Or</span>\n            </div>\n        </div>\n    </div>\n}\nexport default SocialSignIn","import React from \"react\";\nimport { Modal, Image } from \"react-bootstrap\";\nimport { ENV, IS_TAGEMBED, WASABI_PATH } from \"../../actions/api\";\n\nconst TagembedRedirect = ({ show, onHide }) => {\n    return <Modal size=\"sm\" show={show} className=\"px-3\" onHide={onHide} backdrop=\"static\" aria-labelledby=\"contained-modal-title-vcenter\" keyboard={false} centered>\n        <Modal.Body className=\"p-0\">\n            <div className=\"popup-wrap\">\n                <div className=\"popup-inn\">\n                    <div className=\"popup-head\">\n                        <Image className=\"py-2\" src={`${WASABI_PATH}app/assets/popup/box-embed.png`} alt=\"tag\" />\n                    </div>\n                    <p>{IS_TAGEMBED ? `You are an existing member at Tagbox. As Tagembed is part of Tagbox group of companies, enter the same credentials used for Tagbox to log in.` : `You are an existing member at Tagembed (Tagbox's partner platform). To log in, simply log in with Tagembed credentials or try another email address.`}</p>\n                    <div className=\"d-flex align-items-center justify-content-between p-5\">\n                        <span className=\"popup-try\" onClick={onHide}>Try Another Email</span>\n                        <button className=\"btn btn-primary\" onClick={() => window.open(`https://${ENV}.${IS_TAGEMBED ? 'taggbox' : 'tagembed'}.com/accounts/login`, \"_self\")}>Go To Login Page</button>\n                    </div>\n                </div>\n            </div>\n        </Modal.Body>\n    </Modal>\n}\n\nexport default TagembedRedirect;"],"names":["_ref","loginAction","googlePromptFun","window","google","Object","keys","length","accounts","id","initialize","client_id","GOOGLE_CLIENT_ID","callback","response","credential","data","token","base64","split","replace","jsonPayload","decodeURIComponent","atob","map","c","charCodeAt","toString","slice","join","JSON","parse","parseJwt","error","toast","autoClose","prompt","useEffect","script","document","createElement","src","async","defer","body","appendChild","removeChild","_jsx","_Fragment","text","link","linkText","_jsxs","className","children","Link","to","title","cookies","Cookies","Login","Component","constructor","props","super","state","accountEmail","accountPassword","emailError","passwordError","loginLoader","loginMailError","memberRemember","showPassword","resetAlert","loginPwdError","tagembedRedirect","handleMessage","parseAUTHJson","event","code","type","console","log","responseData","GOOGLE_AUTH_TOKEN","userInfo","removeAuthLocalData","this","socialLogin","accountFullName","name","accountEmailId","email","createFrom","picture","authId","sub","readAuthentication","emailTextChange","setState","target","value","passwordTextChange","clickOnLogin","_String","_String2","localStorage","setItem","String","trim","validateEmail","userData","emailId","password","loginType","RememberDetails","status","loginUser","history","callBackError","responseCallback","message","isValidMsg","getGoogleUserDetails","googleUserDetails","then","res","onGSocialLogin","provider","trackingPage","getCookieValue","landingPage","userSignUp","fullName","activeProduct","oauth_uid","utm_source","socialData","toLowerCase","includes","TOAST_ERROR","componentDidMount","addEventListener","documentElement","setAttribute","DOMAIN_NAME","e","parsed","queryString","location","search","get","reset","componentWillUnmount","removeEventListener","render","GoogleLoginSuggestions","href","Alert","variant","dismissible","SocialSignIn","autoComplete","onKeyPress","key","Form","Group","Label","htmlFor","Control","size","placeholder","onChange","onClick","FontAwesomeIcon","icon","checked","Button","style","display","OtherAuthAction","FormTerms","TagembedRedirect","show","onHide","connect","dispatch","postbody","getGoogleAuth","getGoogleCode","minWidth","Image","baseUrl","width","height","alt","Modal","backdrop","keyboard","centered","Body","WASABI_PATH","IS_TAGEMBED","open","ENV"],"sourceRoot":""}