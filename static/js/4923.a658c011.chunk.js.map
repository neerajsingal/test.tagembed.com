{"version":3,"file":"static/js/4923.a658c011.chunk.js","mappings":"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","sources":["app/Authentication/Components/OtherAuthAction.js","app/Authentication/ForgotPassword.js"],"sourcesContent":["import { Link } from 'react-router-dom';\nconst OtherAuthAction = ({ text, link, linkText }) => <div className=\" text-center fw-normal fs-8 mt-lg-5 mt-1 f-center mb-5\">{text}\n       <Link to={link} className=\"btn btn-link text-decoration-none fw-bold fs-8 p-0 ms-1\" title=\"Auth\">{linkText}</Link>\n</div>\nexport default OtherAuthAction;\n","import React, { Component } from \"react\";\nimport { Form, Button} from 'react-bootstrap';\nimport OtherAuthAction from \"./Components/OtherAuthAction\";\nimport { forgotPassword } from '../../actions/loginActions'\nimport { validateEmail } from \"../../utils\";\nimport FormTerms from \"./Components/FormTerms\";\nclass ForgotPassword extends Component {\n    constructor(props) {\n        super(props)\n    }\n    state = {\n        accountEmailId: null,\n        emailError: null,\n        emailErrorMessage: null,\n        success: null,\n        btnLoader: false,\n    }\n    onEmailTextChange = event => {\n        this.setState({ accountEmailId: event.target.value, emailError: null, emailErrorMessage: null })\n    }\n    onClickToForgot = event => {\n        const { accountEmailId } = this.state;\n        const { activeProduct } = this.props\n        var self = this;\n        self.setState({ btnLoader: true })\n        if (accountEmailId && String(accountEmailId).trim().length > 0 && validateEmail(accountEmailId)) {\n            forgotPassword({ emailId: accountEmailId, activeProduct }).then((response) => {\n                self.setState({ success: true, emailErrorMessage: null, btnLoader: false, })\n            }).catch((ex) => {\n                const { data } = ex.response\n                self.setState({ emailError: true, emailErrorMessage: `Couldn't find your account with this e-mail`, btnLoader: false, })\n            })\n        }\n        else {\n            this.setState({ emailError: true, btnLoader: false, emailErrorMessage: accountEmailId && String(accountEmailId).trim().length > 0 ? 'Enter valid email.' : 'Email id is required.'})\n        }\n\n    }\n    render() {\n        const { prefix } = this.props\n        const { accountEmailId, emailError, success, emailErrorMessage, btnLoader } = this.state\n        return <div className=\"w-100 mb-lg-0 mb-3\">\n            <div className=\"text-start mb-5\">\n                <h1 className=\"mb-0 display-2 fw-bold mb-3\">Forgot Password ?</h1>\n                <div className=\"text-gray-500 fs-8\">Enter your email to reset your password.</div>\n            </div>\n            {success ? <div className=\"alert alert-success py-2\" role=\"alert\">\n                Success! Please check your e-mail to reset your password.\n            </div>: null}\n            <div className=\"mb-8\">\n                <Form.Group className=\"mb-4 mb-xl-5\">\n                    <Form.Label className=\"fw-bold\" htmlFor=\"email_\">Email</Form.Label>\n                    <Form.Control type=\"email\" size=\"lg\" placeholder=\"you@yourcompany.com\" className={`${emailError ? `is-invalid` : ``}`} value={accountEmailId || ''} onChange={this.onEmailTextChange}  />\n                    {emailError ? <span className=\"invalid-feedback\">{emailErrorMessage}</span> : null}\n                </Form.Group>\n            </div>\n            <div className=\"d-grid mb-4 w-100\">\n                <Button variant=\"primary\" size={'lg'} type=\"submit\" className={`${btnLoader ? ' disabled' : ''}`}  onClick={this.onClickToForgot}>\n                    <span className=\"indicator-label\" style={{ display: btnLoader ? 'none' : 'block' }}>Reset Password</span>\n                    <span className=\"indicator-progress\" style={{ display: !btnLoader ? 'none' : 'block' }}> Please wait...\n                        <span className=\"spinner-border spinner-border-sm align-middle ms-2\"></span>\n                    </span>\n                </Button>\n            </div>\n            <OtherAuthAction text=\"Back to\" link={'/accounts/login'} linkText={'Login'} />\n            <FormTerms/>\n        </div>\n    }\n}\n\nexport default ForgotPassword"],"names":["_ref","text","link","linkText","_jsxs","className","children","_jsx","Link","to","title","ForgotPassword","Component","constructor","props","super","state","accountEmailId","emailError","emailErrorMessage","success","btnLoader","onEmailTextChange","event","this","setState","target","value","onClickToForgot","activeProduct","self","String","trim","length","validateEmail","forgotPassword","emailId","then","response","catch","ex","data","render","prefix","role","Form","Group","Label","htmlFor","Control","type","size","placeholder","onChange","Button","variant","onClick","style","display","OtherAuthAction","FormTerms"],"sourceRoot":""}