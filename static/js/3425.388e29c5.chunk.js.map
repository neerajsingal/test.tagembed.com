{"version":3,"file":"static/js/3425.388e29c5.chunk.js","mappings":"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","sources":["app/Layout/Main/CommonComponents/Uploads/AttachMedia.js","actions/appActions.js","app/Layout/Main/CommonComponents/ContactModal.js","app/Layout/Main/CommonComponents/RequestButtonHOC.js","app/Layout/Main/Feeds/UpgradePlan/index.js","app/Layout/Main/Feeds/AddFeed/index.js"],"sourcesContent":["import React, { Component } from 'react';\nimport $ from 'jquery';\nimport { Uppy } from \"@uppy/core\";\nimport '@uppy/core/dist/style.min.css';\nimport '@uppy/dashboard/dist/style.min.css';\nimport '@uppy/drag-drop/dist/style.min.css';\nimport '@uppy/status-bar/dist/style.min.css';\nimport '@uppy/webcam/dist/style.min.css';\nimport Transloadit from \"@uppy/transloadit\";\nimport GoogleDrive from '@uppy/google-drive';\nimport Url from '@uppy/url';\nimport { DashboardModal } from '@uppy/react';\nimport { Image, Button } from 'react-bootstrap';\nimport { TEMP_URL, UPPY_BUCKET_URL, UPPY_KEY, UPPY_ROBOT, UPPY_BUCKET, UPPY_REGION, UPPY_AWS_KEY, UPPY_AWS_SECRET_KEY, UPPY_COMPANION_URL } from '../../../../../actions/constants';\nimport { FontAwesomeIcon } from '../../../../../Assets/AssetsHelper';\n\n\nexport default class AttachMedia extends Component {\n    constructor(props) {\n        super(props)\n        this.uppy = new Uppy({ debug: true, autoProceed: false, restrictions: { maxFileSize: 50000000, maxNumberOfFiles: 1, minNumberOfFiles: 1, allowedFileTypes: this.props.allowFiles } })\n            .use(Transloadit, {\n                target: '#a',\n                params: {\n                    auth: {\n                        key: UPPY_KEY\n                    },\n                    steps: {\n                        store: {\n                            robot: UPPY_ROBOT,\n                            bucket_region: UPPY_REGION,\n                            bucket: UPPY_BUCKET,\n                            key: UPPY_AWS_KEY,\n                            secret: UPPY_AWS_SECRET_KEY,\n                            path:this.props.isLocation ? 'request-feature/${file.id}.${file.ext}' : 'tmp/${file.id}.${file.ext}'\n                        }\n                    }\n                },\n                waitForEncoding: true\n            })\n            .use(GoogleDrive, { target: Uppy.Dashboard, companionUrl: UPPY_COMPANION_URL })\n            .use(Url, { target: Uppy.Dashboard, companionUrl: UPPY_COMPANION_URL })\n    }\n    state = {\n        backgroundModal: false,\n        ext:'',\n        fileName:''\n    }\n    componentDidMount() {\n        var self = this;\n        this.uppy.on('transloadit:result', (stepName, result) => {\n            this.setState({\n                ext:result.ext,\n                fileName:result.basename\n            })\n            self.props.onClickToupload(this.props.isLocation ? `${UPPY_BUCKET_URL}request-feature/${result.id}.${result.ext}` : `${TEMP_URL}${result.id}.${result.ext}`, () => {\n                setTimeout(() => {\n                    this.uppy.cancelAll()\n                    this.setState({ backgroundModal: false })\n                }, 300)\n            })\n        })\n    }\n    onBackgroundClose = event => {\n        this.uppy.cancelAll()\n        this.setState({ backgroundModal: false })\n    }\n    onBackgroundOpen = event => {\n        this.setState({ backgroundModal: true }, () => {\n            $(\".uppy-Dashboard-close\").click(() => {\n                this.uppy.cancelAll()\n                this.setState({ backgroundModal: false })\n            })\n        })\n    }\n    render() {\n        const { imageStyle, uploadedMedia, id, text } = this.props\n        const { backgroundModal, ext, fileName } = this.state\n\n        const fileIcon = (ext) => {\n            switch(ext) {\n                case 'docx':\n                    return 'file-doc'\n                    break;\n                case 'pdf':\n                    return 'file-pdf'\n                    break;\n                case 'mp4':\n                    case 'mov':\n                    return 'file-video'\n                    break;\n                default:\n                    return false\n            }\n        }\n        return <>\n            <div className=\"d-flex align-items-start justify-content-between flex-column py-1\">\n                {uploadedMedia ?\n                    <div className='f-between w-100 bg-gray-100 rounded-2 p-4 align-items-center'>\n                        <div className='d-flex flex-grow-1 align-items-center' style={{width:'calc(100% - 30px)'}}>\n                            {fileIcon(ext)?\n                                <div className='f-center flex-shrink-0 me-3' style={{fontSize:'3rem'}}>\n                                    <FontAwesomeIcon type={'solid'} icon={fileIcon(ext)} iconClass=\"text-gray-700\"/>\n                                </div>\n                            :\n                                <Image id=\"bg_image\" className=\"object-fit-cover rounded-2 me-3\" src={uploadedMedia} height={60} width={60} alt=\"\" style={{ maxHeight: 60 }} />\n                            }\n                            {ext ? <p className='text-ellipsis fs-8 mb-0'>{fileName}.{ext}</p> : null}\n                        </div>\n                        <Button variant=\"icon\" size=\"sm\" className=\"rounded-circle bg-danger border-danger text-white h-20px w-20px\" onClick={() => this.props.onClickToupload('', () => { })}>\n                                <FontAwesomeIcon icon={'xmark'}/>\n                        </Button>\n                    </div> \n                    :\n                    <>\n                    <Button id={id} variant='light' className=\"w-100\" onClick={() => this.setState({ backgroundModal: true })}><FontAwesomeIcon icon={'arrow-up-from-bracket'} />{text ? text : 'Upload'}</Button>\n                    <p className='text-gray-500 mt-1 fw-medium fs-9'><FontAwesomeIcon type={'solid'} icon={'info-circle'} iconClass={'me-1'} />Accepts {this.props.allowFiles.join(\", \")}</p>\n                    </>\n                }\n            </div>\n            {\n                backgroundModal ?\n                    <DashboardModal\n                        animateOpenClose={true}\n                        open={backgroundModal}\n                        proudlyDisplayPoweredByUppy={false}\n                        inline={false}\n                        showProgressDetails={true}\n                        height={750}\n                        browserBackButtonClose={true}\n                        showRemoveButtonAfterComplete={false}\n                        uppy={this.uppy}\n                        onRequestClose={this.onBackgroundClose}\n                        closeAfterFinish={true}\n                        plugins={['Url']}\n                    />\n                    : null\n            }\n        </>\n    }\n\n}\n","import { FEATURE_REQUEST } from \"./api\";\nimport HttpClient from \"./http-client\";\nexport const IS = localStorage.getItem('token');\n\n\nexport const featureRequest = (request) => {\n       return new HttpClient().post(`${FEATURE_REQUEST}`, {\n              'name': request.name,\n              'email': request.email,\n              'description': request.description,\n              'file':request.file\n       })\n}\n","import React, { Component } from 'react'\nimport { Modal, Button, Col, Row, InputGroup, Form } from 'react-bootstrap'\nimport { connect } from \"react-redux\";\nimport AttachMedia from './Uploads/AttachMedia'\nimport { containsSpecialChars, TOAST_ERROR, TOAST_SUCCESS, validateEmail } from '../../../../utils';\nimport { featureRequest } from '../../../../actions/appActions';\n\nclass ContactModal extends Component {\n  constructor(props) {\n      super(props);\n      this.state = {\n        name:this.props.authorized?.userData?.user_data?.user.name,\n        email:this.props.authorized?.userData?.user_data?.user.emailId,\n        description:'',\n        uploadedMedia:'',\n        uploadedUrl:'',\n        nameErr:false,\n        emailErr:false,\n        descriptionErr:false,\n        isLoading:false\n      };\n  }\n\n  \n  submitForm = () => {\n      const {name, email, description, uploadedMedia} = this.state\n\n      let nameValidation = name && !containsSpecialChars(name) && String(name).trim() != 0 ? true : false\n      let emailValidation = email && validateEmail(email) ? true : false\n      let descriptionValidation = description && description.length <= 500 ? true : false\n\n      if (nameValidation && emailValidation && descriptionValidation) {\n        this.setState({\n          isLoading:true\n        })\n        const request = { 'name': name, 'email': email, 'description':`<b>${this.props.title}</b>-${description}`, 'file': uploadedMedia}\n        featureRequest(request).then((res) => {\n          if (res.data.responseCode == 200) {\n            setTimeout(() => {\n              TOAST_SUCCESS('Request shared successfully')\n              this.setState({\n                isLoading:false,\n                name:this.props.authorized?.userData?.user_data?.user.name,\n                email:this.props.authorized?.userData?.user_data?.user.emailId,\n                description:'',\n                uploadedMedia:'',\n                uploadedUrl:'',\n                nameErr:false,\n                emailErr:false,\n                descriptionErr:false\n              })\n              this.props.onCloseModel(false)\n            }, 1000);\n          } else {\n            this.setState({\n                isLoading:false\n            })\n            TOAST_ERROR(res.data.message);\n          }\n        }).catch((error) => {\n          this.setState({\n              isLoading:false\n          });\n          TOAST_ERROR('Something went wrong, please try again later.');\n        })\n      }else{\n        this.setState({\n            isLoading:false,\n            nameErr: !nameValidation,\n            emailErr: !emailValidation,\n            descriptionErr: !descriptionValidation\n        });\n      }\n    }\n  \n  onClickToupload = (value, callBack) => this.setState({ uploadedMedia: value }, () => callBack())\n\n  onCloseModelFun = () => {\n      this.setState({\n        name:this.props.authorized?.userData?.user_data?.user.name,\n        email:this.props.authorized?.userData?.user_data?.user.emailId,\n        description:'',\n        uploadedMedia:'',\n        uploadedUrl:'',\n        nameErr:false,\n        emailErr:false,\n        descriptionErr:false\n      })\n      this.props.onCloseModel(false)\n  }\n  render() {\n    const { show, onCloseModel, authorized, title } = this.props\n    const user = authorized?.userData?.user_data?.user\n    const {name, email, description, uploadedUrl, nameErr, emailErr, descriptionErr, isLoading, uploadedMedia} = this.state\n    return (<Modal id=\"reqFeature\" size=\"lg\" show={show} aria-labelledby=\"reqFeature\" tabIndex=\"0\" centered backdrop={'static'} onHide={this.onCloseModelFun}>\n        <Modal.Header closeButton>\n          <Modal.Title>{title}</Modal.Title>\n        </Modal.Header>\n        <Modal.Body className=\"p-lg-7 p-3 demo_schedule position-relative\">\n          <Row className=\"mb-3\">\n            <Form.Group as={Col} md=\"6\">\n              <Form.Label>Full Name <strong className=\"text-danger\">*</strong></Form.Label>\n              <Form.Control\n                id=\"r_f_name\"\n                required\n                type=\"text\"\n                placeholder=\"Full name\"\n                className={nameErr ? 'is-invalid' : ''}\n                value={name} onChange={(e) => this.setState({name:e.target.value, nameErr:false})}\n              />\n              {nameErr && <div className=\"invalid-feedback\">Name is required.</div>}\n            </Form.Group>\n            <Form.Group as={Col} md=\"6\">\n              <Form.Label>Email <strong className=\"text-danger\">*</strong></Form.Label>\n              <Form.Control\n                id=\"r_f_email\"\n                required\n                type=\"email\"\n                placeholder=\"example@example.com\"\n                className={emailErr ? 'is-invalid' : ''}\n                value={email} onChange={(e) => this.setState({email:e.target.value, emailErr:false})}\n              />\n              {emailErr && <div className=\"invalid-feedback\">{email != '' ? 'Enter valid email.' : 'Email ID is required.'}</div>}\n            </Form.Group>\n          </Row>\n            <Form.Group as={Col} className=\"mb-3\">\n              <Form.Label>Description <strong className=\"text-danger\">*</strong></Form.Label>\n              <Form.Control as={'textarea'} id=\"r_f_desc\"\n                placeholder=\"Enter Description\"\n                className={`${descriptionErr ? 'is-invalid' : ''} textarea-min-row-6`} maxLength={500} onChange={(e) => this.setState({description:e.target.value, descriptionErr:false})} value={description}\n              />\n              <div className=\"f-between\">\n                <div className=\"invalid-feedback d-block\">{descriptionErr ? 'This field is required' : ''}</div>\n                <span className=\"fs-10 text-muted pt-1\">{description?.length}/500</span>\n              </div>\n            </Form.Group>\n            <Form.Group as={Col} className=\"mb-3\">\n              <AttachMedia id=\"sugg_doc\" imageStyle={{ paddingBottom: '66%' }} uploadedMedia={uploadedMedia} onClickToupload={this.onClickToupload} text={'Upload File'} allowFiles={['image/*', '.docx', '.pdf', '.mp4', '.mov']} isLocation={true} />\n            </Form.Group>\n        </Modal.Body>\n        <Modal.Footer>\n          <Button id=\"r_f_cancel\" variant='secondary' className='ms-3 btn-min-w' onClick={this.onCloseModelFun}>Cancel</Button>\n          <Button id=\"r_f_submit\" className={`ms-3 btn-min-w ${isLoading? 'spinner' :''}`} onClick={this.submitForm}>Submit</Button>\n        </Modal.Footer>\n      </Modal>\n    )\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    authorized: state.authorized,\n  }\n}\nconst mapDispatchToProps = dispatch => {\n  return {\n\n  }\n}\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactModal);","import React, { Component } from 'react';\nimport { Button, Tooltip, OverlayTrigger } from 'react-bootstrap'\nimport { FontAwesomeIcon } from '../../../../Assets/AssetsHelper'\nimport ContactModal from './ContactModal'\n\nclass RequestButtonHOC extends Component {\n       constructor(props) {\n              super(props);\n              this.state = {\n                     show: false\n              };\n       }\n       render() {\n              const {title} = this.props\n              const { show } = this.state\n              return <>\n                     <span onClick={() => this.setState({ show: !show })}>\n                            {this.props.children}\n                     </span>\n                     <ContactModal show={show} onCloseModel={() => this.setState({ show: false })} title={title ? title : 'Request New Feature'}/>\n                     </>\n       }\n}\n\nexport default RequestButtonHOC;","import React from 'react'\nimport { Modal, Image } from 'react-bootstrap'\nimport { GET_NETWORK_ICON, GET_NETWORK_NAME } from '../../../../../utils';\nimport { baseUrl } from '../../../../../Assets/AssetsHelper';\nimport './upgradeplan.scss'\n\n\nexport default function UpgradePlan({ network, onHide, showPayment, showPricing }) {\n    const name = GET_NETWORK_NAME(network?.id);\n    const icon = GET_NETWORK_ICON(network?.id);\n    const price = 19;\n\n    return (\n        <Modal show={true} className=\"px-3 modal-lg\" onHide={onHide} backdrop=\"static\" keyboard={false} aria-labelledby=\"contained-modal-title-vcenter\" centered>\n            <Modal.Body className=\"p-0\">\n                <div className=\"popup-wrap\">\n                    <div className=\"popup-inn\" style={{ maxWidth: \"100%\" }}>\n                        <div className=\"inappBody\">\n                            <div className=\"planTitle d-flex align-items text-start align-items-center position-relative\">\n                                <Image src={baseUrl(`media/icons/social-icons-square/${icon}.svg`)} alt={name} className=\"img-fluid me-3\" />\n                                <div className=\"planTitleinn\">\n                                    <strong>Access {name} Content with Our Paid Plan! 🎯</strong>\n                                    <p className=\"m-0\">You're trying to connect {name}, a premium source available in our Paid Plan. Unlock it to boost engagement and add a fresh dynamic to your site!</p>\n                                </div>\n                                <span onClick={onHide} className=\"popupClose\"><Image src={baseUrl('media/icons/svg-icons/close-gray.svg')} alt=\"close\" /></span>\n                            </div>\n                            <div className=\"planAll d-flex align-items-center justify-content-between\">\n                                <div className=\"planFeatures\">\n                                    <ul className=\"m-0 p-0 text-start\">\n                                        <li><span>Features</span></li>\n                                        <li>{name} Integration</li>\n                                        <li>Feeds</li>\n                                        <li>Views/month</li>\n                                        <li>Branding</li>\n                                        <li>Customer Support</li>\n                                    </ul>\n                                </div>\n                                <div className=\"planFree\">\n                                    <ul className=\"m-0 p-0 text-center\">\n                                        <li><Image src={baseUrl(`media/icons/svg-icons/check-gray.svg`)} alt=\"check\" className=\"img-fluid\" /><span className=\"d-block\">Free Plan</span></li>\n                                        <li>Not Available</li>\n                                        <li>1 Feeds</li>\n                                        <li>500 Views/mo</li>\n                                        <li>With Ad</li>\n                                        <li>Basic</li>\n                                    </ul>\n                                </div>\n                                <div className=\"planLite\">\n                                    <ul className=\"m-0 p-0 text-center\">\n                                        <li><Image src={baseUrl(`media/icons/svg-icons/liteplan.svg`)} alt=\"liteplan\" className=\"img-fluid\" /><span className=\"d-block\">Starter Plan</span></li>\n                                        <li>Available</li>\n                                        <li>2 Feeds</li>\n                                        <li>10,000 Views/mo</li>\n                                        <li>Ad Free</li>\n                                        <li>Priority Support</li>\n                                        <li><button className=\"btn btn-primary w-100\" onClick={showPayment}>Upgrade for ${price}</button></li>\n                                    </ul>\n                                </div>\n                            </div>\n                            <div className=\"text-center seeAllplan\">\n                                <span className=\"d-inline-block cursor-pointer\" onClick={showPricing}>*see all plans</span>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </Modal.Body>\n        </Modal>)\n}","import React, { useEffect, useState } from 'react'\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Link, useNavigate, useParams } from 'react-router-dom';\nimport { GET_ADD_FEED } from '../../../../../actions/moderationActions';\nimport { SNAPUP_DETAILS_ACTION } from '../../../../../actions/addFeedActions';\nimport { GET_LOCAL, GET_NETWORK_ICON, GET_NETWORK_NAME, SET_LOCAL, generateRandomArray } from '../../../../../utils';\nimport { baseUrl, FontAwesomeIcon } from '../../../../../Assets/AssetsHelper';\nimport { Image, Badge, Container, Card, Button } from 'react-bootstrap';\nimport RequestButtonHOC from '../../CommonComponents/RequestButtonHOC';\nimport ContactModal from '../../PricePlan/Elements/ContactModal';\nimport { checkPermission } from '../../../../../actions/collaboratorActions';\nimport SubHeaderCrumbs from '../../CommonComponents/SubHeader';\nimport UpgradePlan from '../UpgradePlan';\nimport PaymentModal from '../../PricePlan/Elements/PaymentModal';\nimport { getPlan } from '../../../../../actions/planDetail';\nimport { HUBSPOT_URL, PRODUCT_PLANS } from '../../../../../actions/constants';\nimport { updateSalesModal } from '../../../../../actions/loginActions';\n\nconst AddFeed = () => {\n    const { wallId } = useParams();\n    const dispatch = useDispatch()\n    const navigate = useNavigate()\n    const addFeedData = useSelector(state => state.addFeedReducer)\n    const allWalls = useSelector(state => state?.dashboardData?.dashboarddata?.allWalls)\n    const [showContactUs, setShowContactUs] = useState(false)\n    const [type, setType] = useState(\"\")\n    const [payment, setPayment] = useState(false)\n    const [filterNetwork, setFilterNetwork] = useState([])\n    const [network, setNetwork] = useState(null);\n\n    useEffect(() => {\n        dispatch(GET_ADD_FEED())\n    }, [])\n\n    const getLinkProps = (networkId, access) => {\n        if (access == 0) return {}\n        if (networkId == 45 || networkId == 46) return {};\n        if (networkId === 33) return { to: \"/creators\" };\n        if (networkId === 0) return { to: \"/manual-upload\" };\n        return { to: `/content/addfeed/${wallId}/${networkId}` };\n    };\n\n    const clickToshowContact = (status, key) => {\n        setShowContactUs(status)\n        setType(key)\n    }\n\n    const checkTour = async (sel) => {\n        const tourStep = GET_LOCAL('tourStep');\n        const isTourComplete = GET_LOCAL('isTour') ?? true;\n        const { default: appTour } = await import('../../../../../actions/appTour')\n        const { tour } = new appTour(navigate, false, dispatch);\n        if (!isTourComplete && tourStep?.id == '#tour_net_18' && addFeedData?.addFeedNetworks?.networks?.length) {\n            SET_LOCAL('tourStep', { id: \"#create_feed\", step: 2 });\n            if (sel) tour.destroy();\n            else setTimeout(() => tour.highlight({ element: '#tour_net_18' }), 400);\n        }\n    }\n\n    const getPaidPlan = (type, loadingCB) => {\n        const postBody = {\n            billingcycle: \"0\",\n            isAddOn: \"0\",\n            couponCode: \"\",\n            widget_addon_qty: \"0\",\n            feeds_addon_qty: \"0\",\n            twitter_addon_qty: \"0\",\n            isCreatenewSubscription: false,\n            planId: PRODUCT_PLANS.firstPaid\n        }\n        getPlan(postBody, type, loadingCB);\n    }\n\n    useEffect(() => {\n        checkTour();\n        setFilterNetwork(addFeedData?.addFeedNetworks?.networks);\n    }, [addFeedData?.addFeedNetworks?.networks])\n\n    const renderNetworkBlocks = (network) => {\n        return <div key={network.id} className=\"px-2 mb-4\">\n            <Link id={`tour_net_${network.id}`} className='btn btn-secondary position-relative' {...getLinkProps(network.id, network.access)} onClick={() => network.access == 0 ? setNetwork(network) : [34, 35].includes(network.id) ? clickToshowContact(true, network.name) : [45, 46].includes(network.id) ? dispatch(updateSalesModal({ url: `${HUBSPOT_URL}`, embedCode: null })) : localStorage.getItem('tourStep') ? checkTour(true) : {}} title={GET_NETWORK_NAME(network.id)}>\n                {network.id == 29 ?\n                    <FontAwesomeIcon type={'solid'} icon={'star'} iconClass={'text-warning fs-6'} />\n                    :\n                    <>\n                        <Image height={20} width={20} className='me-2' src={baseUrl(`media/icons/social-icons-square/${GET_NETWORK_ICON(network.id)}.svg`)} alt={GET_NETWORK_NAME(network.id)} title={GET_NETWORK_NAME(network.id)} fluid />\n                        {network.access == 0 ? <Image style={{ position: \"absolute\", right: '5px', top: '-1px', maxHeight: '14px' }} src={baseUrl(`media/icons/social-icons-square/premium.svg`)} /> : null}\n                    </>\n                }\n                {network.name}\n                {network.id === 33 && <Badge bg=\"\" className='position-absolute badge-primary py-1' style={{ top: -16, right: 10 }}>New</Badge>}\n            </Link>\n        </div >\n    }\n\n    const getWallData = allWalls?.find((e) => e.id == localStorage.getItem('wallId')) ?? {};\n\n    const filterAction = (status) => {\n        let networkList = addFeedData?.addFeedNetworks?.networks;\n\n        if (networkList && status) {\n            let isReview = true;\n            if (status == \"social\") isReview = false;\n            networkList = networkList.filter(item => {\n                if (item.id == 3 || item.isReview == isReview) return item;\n            });\n        }\n        setNetwork(status);\n        setFilterNetwork(networkList);\n    }\n\n    return (<>\n        {allWalls?.length ? <SubHeaderCrumbs key={getWallData?.id} crumbs={[{ name: getWallData?.name ?? \"\", icon: \"grid-2-plus\", imgUrl: getWallData?.thumbnail ?? \"\" }, { name: \"Home\", link: \"/home\" }, { name: \"Content\", link: \"/content\" }, { name: getWallData?.name, link: `/content/moderation/${getWallData?.id}` }, { name: \"Add feed\", link: `/content/addfeed/${getWallData?.id || localStorage.getItem('wallId') || ''}` }]} RightComponent={<div>\n            {\n                <button onClick={() => checkPermission('networkManager', 'manageFeed') ? navigate(`/content/managefeed/${localStorage.getItem('wallId')}`) : {}} className=\"btn btn-primary btn-sm text-nowrap btn-min-w\">\n                    Manage feed\n                </button>\n            }\n        </div>} showGallerySwitcher={false} /> : null}\n\n        <div className='d-flex flex-column flex-column-fluid full-content'>\n            <Container>\n                <Card>\n                    {/* <Card.Header className='f-between d-flex'>\n                        <h2 className=\"me-2 h4 my-3\">Add feeds</h2>\n                        <div className=\"f-center\">\n                            {manageFeed.feeds?.length > 0 ? <Link to={`/content/managefeed/${localStorage.getItem('wallId')}`} className=\"btn btn-primary btn-sm text-nowrap btn-min-w\" title='feed'>\n                                Manage feeds\n                            </Link> : null}\n                        </div>\n                    </Card.Header> */}\n                    <Card.Body>\n                        <div className='f-center add_feed_ m-auto'>\n                            <div className='f-center flex-column mb-10'>\n                                <div className=\"text-center mb-5\">\n                                    <h3>Choose source network</h3>\n                                    <p>Select the social platform from which you want to add the feeds</p>\n                                </div>\n\n                                {/* Filter networks start */}\n                                <div className=\"network-filter tb_filter_round_edged_wrapper\">\n                                    <div className=\"row\">\n                                        <div className=\"col-12 px-0 d-flex flex-row align-items-center justify-content-between mb-5 pb-3\">\n                                            <div className=\"filer-custom-desgin d-flex\">\n                                                <div className={`d-flex align-items-center jsutify-content-center mx-1`} >\n                                                    <div className={`rounded-0 border-0 d-flex align-items-center`}> <Button variant='outline-dark' className={network === null ? 'active btn-dark' : ''} onClick={() => filterAction(null)}>All Networks</Button></div>\n                                                </div>\n                                                <div className={`d-flex align-items-center jsutify-content-center mx-1`} >\n                                                    <div className={`rounded-0 border-0 d-flex align-items-center`}>\n                                                        <Button variant='outline-dark' className={network === 'review' ? 'active btn-dark' : ''} onClick={() => filterAction('review')}>Review</Button>\n                                                    </div>\n                                                </div>\n                                                <div className={`d-flex align-items-center jsutify-content-center mx-1`} >\n                                                    <div className={`rounded-0 border-0 d-flex align-items-center`}>\n                                                        <Button variant='outline-dark' className={network === 'social' ? 'active btn-dark' : ''} onClick={() => filterAction('social')}>Social</Button>\n                                                    </div>\n                                                </div>\n                                            </div>\n                                        </div>\n                                    </div>\n                                </div>\n                                {/* Filter networks end */}\n\n                                <div className=\"f-center flex-wrap mb-10\">\n                                    {filterNetwork?.length > 0 ?\n                                        filterNetwork.map(renderNetworkBlocks)\n                                        :\n                                        generateRandomArray(18).map((_, index) => <div key={index} className=\"px-2 mb-4\"><div className=\"sk_rect h-40px me-2 btn-min-w\" style={{ width: 120 }}></div></div>)}\n\n                                    {filterNetwork?.length > 0 ? <div className='px-2 mb-4'>\n                                        <RequestButtonHOC title={'Request New Network'}>\n                                            <Button variant='secondary'><FontAwesomeIcon icon={'plus'} />Request New Network</Button>\n                                        </RequestButtonHOC>\n                                    </div> : null}\n                                </div>\n                            </div>\n                        </div>\n                    </Card.Body>\n                </Card>\n            </Container>\n            <ContactModal show={showContactUs} type={type} onCloseModel={() => clickToshowContact(false, \"\")} />\n\n            {network?.id ? <UpgradePlan network={network} showPayment={() => setPayment(true)} onHide={() => setNetwork(null)} showPricing={() => navigate(`/price`)} /> : null}\n            <PaymentModal show={payment} onHide={() => setPayment(false)} paymentAction={(type, loadingCallBack) => getPaidPlan(type, loadingCallBack)} />\n        </div>\n    </>)\n}\n\nexport default AddFeed"],"names":["AttachMedia","Component","constructor","props","super","state","backgroundModal","ext","fileName","onBackgroundClose","event","this","uppy","cancelAll","setState","onBackgroundOpen","$","click","Uppy","debug","autoProceed","restrictions","maxFileSize","maxNumberOfFiles","minNumberOfFiles","allowedFileTypes","allowFiles","use","Transloadit","target","params","auth","key","UPPY_KEY","steps","store","robot","UPPY_ROBOT","bucket_region","UPPY_REGION","bucket","UPPY_BUCKET","UPPY_AWS_KEY","secret","UPPY_AWS_SECRET_KEY","path","isLocation","waitForEncoding","GoogleDrive","Dashboard","companionUrl","UPPY_COMPANION_URL","Url","componentDidMount","self","on","stepName","result","basename","onClickToupload","UPPY_BUCKET_URL","id","TEMP_URL","setTimeout","render","imageStyle","uploadedMedia","text","fileIcon","_jsxs","_Fragment","children","_jsx","className","style","width","fontSize","FontAwesomeIcon","type","icon","iconClass","Image","src","height","alt","maxHeight","Button","variant","size","onClick","join","DashboardModal","animateOpenClose","open","proudlyDisplayPoweredByUppy","inline","showProgressDetails","browserBackButtonClose","showRemoveButtonAfterComplete","onRequestClose","closeAfterFinish","plugins","localStorage","getItem","ContactModal","_this$props$authorize13","_this$props$authorize14","_this$props$authorize15","_this$props$authorize16","_this$props$authorize17","_this$props$authorize18","submitForm","name","email","description","nameValidation","containsSpecialChars","String","trim","emailValidation","validateEmail","descriptionValidation","length","isLoading","request","HttpClient","post","FEATURE_REQUEST","file","featureRequest","title","then","res","data","responseCode","_this$props$authorize","_this$props$authorize2","_this$props$authorize3","_this$props$authorize4","_this$props$authorize5","_this$props$authorize6","TOAST_SUCCESS","authorized","userData","user_data","user","emailId","uploadedUrl","nameErr","emailErr","descriptionErr","onCloseModel","TOAST_ERROR","message","catch","error","value","callBack","onCloseModelFun","_this$props$authorize7","_this$props$authorize8","_this$props$authorize9","_this$props$authorize10","_this$props$authorize11","_this$props$authorize12","_authorized$userData","_authorized$userData$","show","Modal","tabIndex","centered","backdrop","onHide","Header","closeButton","Title","Body","Row","Form","Group","as","Col","md","Label","Control","required","placeholder","onChange","e","maxLength","paddingBottom","Footer","connect","dispatch","RequestButtonHOC","UpgradePlan","_ref","network","showPayment","showPricing","GET_NETWORK_NAME","GET_NETWORK_ICON","keyboard","maxWidth","baseUrl","AddFeed","_addFeedData$addFeedN4","_allWalls$find","_getWallData$name","_getWallData$thumbnai","wallId","useParams","useDispatch","navigate","useNavigate","addFeedData","useSelector","addFeedReducer","allWalls","_state$dashboardData","_state$dashboardData$","dashboardData","dashboarddata","showContactUs","setShowContactUs","useState","setType","payment","setPayment","filterNetwork","setFilterNetwork","setNetwork","useEffect","GET_ADD_FEED","clickToshowContact","status","checkTour","async","_GET_LOCAL","_addFeedData$addFeedN","_addFeedData$addFeedN2","tourStep","GET_LOCAL","isTourComplete","default","appTour","tour","addFeedNetworks","networks","SET_LOCAL","step","sel","destroy","highlight","element","_addFeedData$addFeedN3","getWallData","find","filterAction","_addFeedData$addFeedN5","networkList","isReview","filter","item","SubHeaderCrumbs","crumbs","imgUrl","thumbnail","link","RightComponent","checkPermission","showGallerySwitcher","Container","Card","map","Link","networkId","access","to","includes","updateSalesModal","url","HUBSPOT_URL","embedCode","fluid","position","right","top","Badge","bg","getLinkProps","generateRandomArray","_","index","PaymentModal","paymentAction","loadingCallBack","getPaidPlan","loadingCB","postBody","billingcycle","isAddOn","couponCode","widget_addon_qty","feeds_addon_qty","twitter_addon_qty","isCreatenewSubscription","planId","PRODUCT_PLANS","firstPaid","getPlan"],"sourceRoot":""}